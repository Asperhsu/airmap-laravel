{"version":3,"sources":["webpack:///list.js","webpack:///webpack/bootstrap 9b46708583e1cd732650?b45e*","webpack:///./resources/assets/js/list-page.js","webpack:///external \"jQuery\"?0cb8*","webpack:///./~/moment/moment.js?cbd3*","webpack:///./~/moment/locale/zh-tw.js?20cb*","webpack:///./~/moment/locale zh-tw?fa6f*","webpack:///(webpack)/buildin/module.js?c3c2*","webpack:///./resources/assets/js/svg-tool.js?3866*","webpack:///./resources/assets/js/list-table.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","moment","$","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","Array","isArray","Object","TypeError","window","bsTable","locale","updateLocale","relativeTime","h","d","M","y","loadDatasource","filename","show","url","replace","getJSON","then","data","bootstrapTable","hide","siteName","location","hash","substr","on","e","val","trigger","row","$tr","is","this","click","removeClass","filter","addClass","group","google","maps","event","addDomListener","geocoder","Geocoder","getAddr","lat","lng","cb","coord","LatLng","geocode","latLng","results","status","GeocoderStatus","OK","address","formatted_address","components","address_components","shift","pop","seperate","short_name","reverse","map","component","long_name","join","$el","_$$data$split","split","_$$data$split2","addr","attr","1","jQuery","2","global","factory","hooks","hookCallback","apply","arguments","setHookCallback","callback","input","prototype","toString","isObject","isObjectEmpty","obj","k","isUndefined","isNumber","isDate","Date","fn","res","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","createUTC","format","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","isValid","_isValid","flags","parsedParts","some$1","isNowValid","isNaN","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","prop","_isAMomentObject","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","key","slice","Error","stack","deprecateSimple","name","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","invalidDate","_invalidDate","ordinal","_ordinal","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","makeGetSet","keepTime","set$1","get","stringGet","stringSet","prioritized","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","addFormatToken","token","padded","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","month","UTC","getUTCDate","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf$1","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","date","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","isLeapYear","getIsLeapYear","createDate","ms","getFullYear","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","loadLocale","oldLocale","locales","globalLocale","_abbr","getSetGlobalLocale","values","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","x","listLocales","keys$1","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromRFC2822","dayFormat","timezone","timezoneIndex","timezones"," GMT"," EDT"," EST"," CDT"," CST"," MDT"," MST"," PDT"," PST","military","basicRfcRegex","momentDate","momentDay","indexOf","splice","configFromString","aspNetJsonRegex","createFromInputFallback","defaults","currentDateArray","nowValue","_useUTC","getUTCMonth","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","ISO_8601","RFC_2822","parsedInput","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","delta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","toDate","inspect","zone","prefix","datetime","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","total","asSeconds","some","fun","t","keys","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","o","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","3","zhTw","ll","lll","llll","hm","7","webpackContext","req","webpackContextResolve","./zh-tw","./zh-tw.js","resolve","8","webpackPolyfill","paths","children","10","svgTemplate","defaultProperty","width","height","viewBox","path","text","color","size","strokeColor","getHtml","userProperty","property","svgHtml","toDataImage","encodeURIComponent","getContrastYIQ","hexcolor","r","g","yiq","getCircleUrl","strokeWidth","fillColor","html","getHomeUrl","getCloudUrl","getFactoryUrl","11","39","SVGTool","formatter","sn","latlng","detail","element","generate","table","Data","RawData","updateTime","human","dataTime","SiteGroup","uniqueKey","ranking","template","hints","indoor","longterm","shortterm","widget","title","head","body","headHtml","bodyHtml","51"],"mappings":"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","file":"list.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"js/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(moment, $) {\"use strict\";\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\t// require(\"expose?bsTable!./list-table\");\n\twindow.bsTable = __webpack_require__(39);\n\t__webpack_require__(11);\n\t__webpack_require__(51);\n\t\n\tmoment.locale('zh-tw');\n\tmoment.updateLocale('zh-tw', {\n\t\trelativeTime: {\n\t\t\tm: '1分鐘',\n\t\t\th: '1小時',\n\t\t\td: '1天',\n\t\t\tM: '1個月',\n\t\t\ty: '1年'\n\t\t}\n\t});\n\t\n\t$(function () {\n\t\t// siteName hashtag\n\t\tvar siteName = window.location.hash.substr(1);\n\t\t$(\".bsTable\").on('load-success.bs.table', function (e, data) {\n\t\t\tif (siteName) {\n\t\t\t\t$(\".bootstrap-table .search input\").val(siteName).trigger('keyup');\n\t\t\t}\n\t\t});\n\t\n\t\t$(\".bsTable\").on('click-row.bs.table', function (e, row, $tr) {\n\t\t\tif ($tr.next().is('tr.detail-view')) {\n\t\t\t\t$(this).bootstrapTable('collapseRow', $tr.data('index'));\n\t\t\t} else {\n\t\t\t\t$(this).bootstrapTable('expandRow', $tr.data('index'));\n\t\t\t}\n\t\t});\n\t\n\t\t$(\"#filter button\").click(function () {\n\t\t\tif ($(this).data('type')) {\n\t\t\t\t$(\"#filter button[data-type]\").removeClass('btn-primary').filter(this).addClass('btn-primary');\n\t\t\t}\n\t\n\t\t\tif ($(this).data('group')) {\n\t\t\t\t$(\"#filter button[data-group]\").removeClass('btn-success').filter(this).addClass('btn-success');\n\t\t\t}\n\t\n\t\t\tvar group = $(\"#filter button.btn-success[data-group]\").data('group');\n\t\t\tloadDatasource(group);\n\t\t});\n\t\n\t\tfunction loadDatasource(filename) {\n\t\t\tif (!filename) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t$(\"#loading\").show();\n\t\n\t\t\tvar url = \"/json/{{filename}}.json\";\n\t\t\turl = url.replace('{{filename}}', filename);\n\t\n\t\t\t$.getJSON(url).then(function (data) {\n\t\t\t\t$('#bsTable').bootstrapTable('load', data);\n\t\t\t\t$(\"#loading\").hide();\n\t\t\t});\n\t\t}\n\t\n\t\tgoogle.maps.event.addDomListener(window, \"load\", function () {\n\t\t\tvar geocoder = new google.maps.Geocoder();\n\t\t\tvar getAddr = function getAddr(lat, lng, cb) {\n\t\t\t\tvar coord = new google.maps.LatLng(lat, lng);\n\t\t\t\tgeocoder.geocode({ 'latLng': coord }, function (results, status) {\n\t\t\t\t\tif (status === google.maps.GeocoderStatus.OK && results) {\n\t\t\t\t\t\tvar address = results[0].formatted_address;\n\t\n\t\t\t\t\t\tvar components = results[0].address_components;\n\t\t\t\t\t\tif (components.length > 4) {\n\t\t\t\t\t\t\tcomponents.shift();components.pop();\n\t\t\t\t\t\t\tvar seperate = components[components.length - 1].short_name == \"TW\" ? '' : ', ';\n\t\t\t\t\t\t\taddress = components.reverse().map(function (component) {\n\t\t\t\t\t\t\t\treturn component.long_name;\n\t\t\t\t\t\t\t}).join(seperate);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tcb(address);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcb('');\n\t\t\t\t});\n\t\t\t};\n\t\n\t\t\t$(\"body\").on(\"mouseover\", \"a.latlng\", function () {\n\t\t\t\tvar $el = $(this);\n\t\n\t\t\t\tvar _$$data$split = $(this).data('latlng').split(','),\n\t\t\t\t    _$$data$split2 = _slicedToArray(_$$data$split, 2),\n\t\t\t\t    lat = _$$data$split2[0],\n\t\t\t\t    lng = _$$data$split2[1];\n\t\n\t\t\t\tgetAddr(lat, lng, function (addr) {\n\t\t\t\t\t$el.attr('title', addr + (\" (\" + $el.data('latlng') + \")\"));\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 1:\n/***/ (function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {//! moment.js\n\t//! version : 2.18.1\n\t//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\t//! license : MIT\n\t//! momentjs.com\n\t\n\t;(function (global, factory) {\n\t     true ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    global.moment = factory()\n\t}(this, (function () { 'use strict';\n\t\n\tvar hookCallback;\n\t\n\tfunction hooks () {\n\t    return hookCallback.apply(null, arguments);\n\t}\n\t\n\t// This is done to register the method called with moment()\n\t// without creating circular dependencies.\n\tfunction setHookCallback (callback) {\n\t    hookCallback = callback;\n\t}\n\t\n\tfunction isArray(input) {\n\t    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n\t}\n\t\n\tfunction isObject(input) {\n\t    // IE8 will treat undefined and null as object if it wasn't for\n\t    // input != null\n\t    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n\t}\n\t\n\tfunction isObjectEmpty(obj) {\n\t    var k;\n\t    for (k in obj) {\n\t        // even if its not own property I'd still call it non-empty\n\t        return false;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction isUndefined(input) {\n\t    return input === void 0;\n\t}\n\t\n\tfunction isNumber(input) {\n\t    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n\t}\n\t\n\tfunction isDate(input) {\n\t    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n\t}\n\t\n\tfunction map(arr, fn) {\n\t    var res = [], i;\n\t    for (i = 0; i < arr.length; ++i) {\n\t        res.push(fn(arr[i], i));\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction hasOwnProp(a, b) {\n\t    return Object.prototype.hasOwnProperty.call(a, b);\n\t}\n\t\n\tfunction extend(a, b) {\n\t    for (var i in b) {\n\t        if (hasOwnProp(b, i)) {\n\t            a[i] = b[i];\n\t        }\n\t    }\n\t\n\t    if (hasOwnProp(b, 'toString')) {\n\t        a.toString = b.toString;\n\t    }\n\t\n\t    if (hasOwnProp(b, 'valueOf')) {\n\t        a.valueOf = b.valueOf;\n\t    }\n\t\n\t    return a;\n\t}\n\t\n\tfunction createUTC (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, true).utc();\n\t}\n\t\n\tfunction defaultParsingFlags() {\n\t    // We need to deep clone this object.\n\t    return {\n\t        empty           : false,\n\t        unusedTokens    : [],\n\t        unusedInput     : [],\n\t        overflow        : -2,\n\t        charsLeftOver   : 0,\n\t        nullInput       : false,\n\t        invalidMonth    : null,\n\t        invalidFormat   : false,\n\t        userInvalidated : false,\n\t        iso             : false,\n\t        parsedDateParts : [],\n\t        meridiem        : null,\n\t        rfc2822         : false,\n\t        weekdayMismatch : false\n\t    };\n\t}\n\t\n\tfunction getParsingFlags(m) {\n\t    if (m._pf == null) {\n\t        m._pf = defaultParsingFlags();\n\t    }\n\t    return m._pf;\n\t}\n\t\n\tvar some;\n\tif (Array.prototype.some) {\n\t    some = Array.prototype.some;\n\t} else {\n\t    some = function (fun) {\n\t        var t = Object(this);\n\t        var len = t.length >>> 0;\n\t\n\t        for (var i = 0; i < len; i++) {\n\t            if (i in t && fun.call(this, t[i], i, t)) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        return false;\n\t    };\n\t}\n\t\n\tvar some$1 = some;\n\t\n\tfunction isValid(m) {\n\t    if (m._isValid == null) {\n\t        var flags = getParsingFlags(m);\n\t        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n\t            return i != null;\n\t        });\n\t        var isNowValid = !isNaN(m._d.getTime()) &&\n\t            flags.overflow < 0 &&\n\t            !flags.empty &&\n\t            !flags.invalidMonth &&\n\t            !flags.invalidWeekday &&\n\t            !flags.nullInput &&\n\t            !flags.invalidFormat &&\n\t            !flags.userInvalidated &&\n\t            (!flags.meridiem || (flags.meridiem && parsedParts));\n\t\n\t        if (m._strict) {\n\t            isNowValid = isNowValid &&\n\t                flags.charsLeftOver === 0 &&\n\t                flags.unusedTokens.length === 0 &&\n\t                flags.bigHour === undefined;\n\t        }\n\t\n\t        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n\t            m._isValid = isNowValid;\n\t        }\n\t        else {\n\t            return isNowValid;\n\t        }\n\t    }\n\t    return m._isValid;\n\t}\n\t\n\tfunction createInvalid (flags) {\n\t    var m = createUTC(NaN);\n\t    if (flags != null) {\n\t        extend(getParsingFlags(m), flags);\n\t    }\n\t    else {\n\t        getParsingFlags(m).userInvalidated = true;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// Plugins that add properties should also add the key here (null value),\n\t// so we can properly clone ourselves.\n\tvar momentProperties = hooks.momentProperties = [];\n\t\n\tfunction copyConfig(to, from) {\n\t    var i, prop, val;\n\t\n\t    if (!isUndefined(from._isAMomentObject)) {\n\t        to._isAMomentObject = from._isAMomentObject;\n\t    }\n\t    if (!isUndefined(from._i)) {\n\t        to._i = from._i;\n\t    }\n\t    if (!isUndefined(from._f)) {\n\t        to._f = from._f;\n\t    }\n\t    if (!isUndefined(from._l)) {\n\t        to._l = from._l;\n\t    }\n\t    if (!isUndefined(from._strict)) {\n\t        to._strict = from._strict;\n\t    }\n\t    if (!isUndefined(from._tzm)) {\n\t        to._tzm = from._tzm;\n\t    }\n\t    if (!isUndefined(from._isUTC)) {\n\t        to._isUTC = from._isUTC;\n\t    }\n\t    if (!isUndefined(from._offset)) {\n\t        to._offset = from._offset;\n\t    }\n\t    if (!isUndefined(from._pf)) {\n\t        to._pf = getParsingFlags(from);\n\t    }\n\t    if (!isUndefined(from._locale)) {\n\t        to._locale = from._locale;\n\t    }\n\t\n\t    if (momentProperties.length > 0) {\n\t        for (i = 0; i < momentProperties.length; i++) {\n\t            prop = momentProperties[i];\n\t            val = from[prop];\n\t            if (!isUndefined(val)) {\n\t                to[prop] = val;\n\t            }\n\t        }\n\t    }\n\t\n\t    return to;\n\t}\n\t\n\tvar updateInProgress = false;\n\t\n\t// Moment prototype object\n\tfunction Moment(config) {\n\t    copyConfig(this, config);\n\t    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\t    if (!this.isValid()) {\n\t        this._d = new Date(NaN);\n\t    }\n\t    // Prevent infinite loop in case updateOffset creates new moment\n\t    // objects.\n\t    if (updateInProgress === false) {\n\t        updateInProgress = true;\n\t        hooks.updateOffset(this);\n\t        updateInProgress = false;\n\t    }\n\t}\n\t\n\tfunction isMoment (obj) {\n\t    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n\t}\n\t\n\tfunction absFloor (number) {\n\t    if (number < 0) {\n\t        // -0 -> 0\n\t        return Math.ceil(number) || 0;\n\t    } else {\n\t        return Math.floor(number);\n\t    }\n\t}\n\t\n\tfunction toInt(argumentForCoercion) {\n\t    var coercedNumber = +argumentForCoercion,\n\t        value = 0;\n\t\n\t    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t        value = absFloor(coercedNumber);\n\t    }\n\t\n\t    return value;\n\t}\n\t\n\t// compare two arrays, return the number of differences\n\tfunction compareArrays(array1, array2, dontConvert) {\n\t    var len = Math.min(array1.length, array2.length),\n\t        lengthDiff = Math.abs(array1.length - array2.length),\n\t        diffs = 0,\n\t        i;\n\t    for (i = 0; i < len; i++) {\n\t        if ((dontConvert && array1[i] !== array2[i]) ||\n\t            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n\t            diffs++;\n\t        }\n\t    }\n\t    return diffs + lengthDiff;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (hooks.suppressDeprecationWarnings === false &&\n\t            (typeof console !==  'undefined') && console.warn) {\n\t        console.warn('Deprecation warning: ' + msg);\n\t    }\n\t}\n\t\n\tfunction deprecate(msg, fn) {\n\t    var firstTime = true;\n\t\n\t    return extend(function () {\n\t        if (hooks.deprecationHandler != null) {\n\t            hooks.deprecationHandler(null, msg);\n\t        }\n\t        if (firstTime) {\n\t            var args = [];\n\t            var arg;\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                arg = '';\n\t                if (typeof arguments[i] === 'object') {\n\t                    arg += '\\n[' + i + '] ';\n\t                    for (var key in arguments[0]) {\n\t                        arg += key + ': ' + arguments[0][key] + ', ';\n\t                    }\n\t                    arg = arg.slice(0, -2); // Remove trailing comma and space\n\t                } else {\n\t                    arg = arguments[i];\n\t                }\n\t                args.push(arg);\n\t            }\n\t            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n\t            firstTime = false;\n\t        }\n\t        return fn.apply(this, arguments);\n\t    }, fn);\n\t}\n\t\n\tvar deprecations = {};\n\t\n\tfunction deprecateSimple(name, msg) {\n\t    if (hooks.deprecationHandler != null) {\n\t        hooks.deprecationHandler(name, msg);\n\t    }\n\t    if (!deprecations[name]) {\n\t        warn(msg);\n\t        deprecations[name] = true;\n\t    }\n\t}\n\t\n\thooks.suppressDeprecationWarnings = false;\n\thooks.deprecationHandler = null;\n\t\n\tfunction isFunction(input) {\n\t    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n\t}\n\t\n\tfunction set (config) {\n\t    var prop, i;\n\t    for (i in config) {\n\t        prop = config[i];\n\t        if (isFunction(prop)) {\n\t            this[i] = prop;\n\t        } else {\n\t            this['_' + i] = prop;\n\t        }\n\t    }\n\t    this._config = config;\n\t    // Lenient ordinal parsing accepts just a number in addition to\n\t    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n\t    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t    this._dayOfMonthOrdinalParseLenient = new RegExp(\n\t        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n\t            '|' + (/\\d{1,2}/).source);\n\t}\n\t\n\tfunction mergeConfigs(parentConfig, childConfig) {\n\t    var res = extend({}, parentConfig), prop;\n\t    for (prop in childConfig) {\n\t        if (hasOwnProp(childConfig, prop)) {\n\t            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n\t                res[prop] = {};\n\t                extend(res[prop], parentConfig[prop]);\n\t                extend(res[prop], childConfig[prop]);\n\t            } else if (childConfig[prop] != null) {\n\t                res[prop] = childConfig[prop];\n\t            } else {\n\t                delete res[prop];\n\t            }\n\t        }\n\t    }\n\t    for (prop in parentConfig) {\n\t        if (hasOwnProp(parentConfig, prop) &&\n\t                !hasOwnProp(childConfig, prop) &&\n\t                isObject(parentConfig[prop])) {\n\t            // make sure changes to properties don't modify parent config\n\t            res[prop] = extend({}, res[prop]);\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction Locale(config) {\n\t    if (config != null) {\n\t        this.set(config);\n\t    }\n\t}\n\t\n\tvar keys;\n\t\n\tif (Object.keys) {\n\t    keys = Object.keys;\n\t} else {\n\t    keys = function (obj) {\n\t        var i, res = [];\n\t        for (i in obj) {\n\t            if (hasOwnProp(obj, i)) {\n\t                res.push(i);\n\t            }\n\t        }\n\t        return res;\n\t    };\n\t}\n\t\n\tvar keys$1 = keys;\n\t\n\tvar defaultCalendar = {\n\t    sameDay : '[Today at] LT',\n\t    nextDay : '[Tomorrow at] LT',\n\t    nextWeek : 'dddd [at] LT',\n\t    lastDay : '[Yesterday at] LT',\n\t    lastWeek : '[Last] dddd [at] LT',\n\t    sameElse : 'L'\n\t};\n\t\n\tfunction calendar (key, mom, now) {\n\t    var output = this._calendar[key] || this._calendar['sameElse'];\n\t    return isFunction(output) ? output.call(mom, now) : output;\n\t}\n\t\n\tvar defaultLongDateFormat = {\n\t    LTS  : 'h:mm:ss A',\n\t    LT   : 'h:mm A',\n\t    L    : 'MM/DD/YYYY',\n\t    LL   : 'MMMM D, YYYY',\n\t    LLL  : 'MMMM D, YYYY h:mm A',\n\t    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n\t};\n\t\n\tfunction longDateFormat (key) {\n\t    var format = this._longDateFormat[key],\n\t        formatUpper = this._longDateFormat[key.toUpperCase()];\n\t\n\t    if (format || !formatUpper) {\n\t        return format;\n\t    }\n\t\n\t    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n\t        return val.slice(1);\n\t    });\n\t\n\t    return this._longDateFormat[key];\n\t}\n\t\n\tvar defaultInvalidDate = 'Invalid date';\n\t\n\tfunction invalidDate () {\n\t    return this._invalidDate;\n\t}\n\t\n\tvar defaultOrdinal = '%d';\n\tvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\t\n\tfunction ordinal (number) {\n\t    return this._ordinal.replace('%d', number);\n\t}\n\t\n\tvar defaultRelativeTime = {\n\t    future : 'in %s',\n\t    past   : '%s ago',\n\t    s  : 'a few seconds',\n\t    ss : '%d seconds',\n\t    m  : 'a minute',\n\t    mm : '%d minutes',\n\t    h  : 'an hour',\n\t    hh : '%d hours',\n\t    d  : 'a day',\n\t    dd : '%d days',\n\t    M  : 'a month',\n\t    MM : '%d months',\n\t    y  : 'a year',\n\t    yy : '%d years'\n\t};\n\t\n\tfunction relativeTime (number, withoutSuffix, string, isFuture) {\n\t    var output = this._relativeTime[string];\n\t    return (isFunction(output)) ?\n\t        output(number, withoutSuffix, string, isFuture) :\n\t        output.replace(/%d/i, number);\n\t}\n\t\n\tfunction pastFuture (diff, output) {\n\t    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n\t}\n\t\n\tvar aliases = {};\n\t\n\tfunction addUnitAlias (unit, shorthand) {\n\t    var lowerCase = unit.toLowerCase();\n\t    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n\t}\n\t\n\tfunction normalizeUnits(units) {\n\t    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n\t}\n\t\n\tfunction normalizeObjectUnits(inputObject) {\n\t    var normalizedInput = {},\n\t        normalizedProp,\n\t        prop;\n\t\n\t    for (prop in inputObject) {\n\t        if (hasOwnProp(inputObject, prop)) {\n\t            normalizedProp = normalizeUnits(prop);\n\t            if (normalizedProp) {\n\t                normalizedInput[normalizedProp] = inputObject[prop];\n\t            }\n\t        }\n\t    }\n\t\n\t    return normalizedInput;\n\t}\n\t\n\tvar priorities = {};\n\t\n\tfunction addUnitPriority(unit, priority) {\n\t    priorities[unit] = priority;\n\t}\n\t\n\tfunction getPrioritizedUnits(unitsObj) {\n\t    var units = [];\n\t    for (var u in unitsObj) {\n\t        units.push({unit: u, priority: priorities[u]});\n\t    }\n\t    units.sort(function (a, b) {\n\t        return a.priority - b.priority;\n\t    });\n\t    return units;\n\t}\n\t\n\tfunction makeGetSet (unit, keepTime) {\n\t    return function (value) {\n\t        if (value != null) {\n\t            set$1(this, unit, value);\n\t            hooks.updateOffset(this, keepTime);\n\t            return this;\n\t        } else {\n\t            return get(this, unit);\n\t        }\n\t    };\n\t}\n\t\n\tfunction get (mom, unit) {\n\t    return mom.isValid() ?\n\t        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n\t}\n\t\n\tfunction set$1 (mom, unit, value) {\n\t    if (mom.isValid()) {\n\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction stringGet (units) {\n\t    units = normalizeUnits(units);\n\t    if (isFunction(this[units])) {\n\t        return this[units]();\n\t    }\n\t    return this;\n\t}\n\t\n\t\n\tfunction stringSet (units, value) {\n\t    if (typeof units === 'object') {\n\t        units = normalizeObjectUnits(units);\n\t        var prioritized = getPrioritizedUnits(units);\n\t        for (var i = 0; i < prioritized.length; i++) {\n\t            this[prioritized[i].unit](units[prioritized[i].unit]);\n\t        }\n\t    } else {\n\t        units = normalizeUnits(units);\n\t        if (isFunction(this[units])) {\n\t            return this[units](value);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction zeroFill(number, targetLength, forceSign) {\n\t    var absNumber = '' + Math.abs(number),\n\t        zerosToFill = targetLength - absNumber.length,\n\t        sign = number >= 0;\n\t    return (sign ? (forceSign ? '+' : '') : '-') +\n\t        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n\t}\n\t\n\tvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\t\n\tvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\t\n\tvar formatFunctions = {};\n\t\n\tvar formatTokenFunctions = {};\n\t\n\t// token:    'M'\n\t// padded:   ['MM', 2]\n\t// ordinal:  'Mo'\n\t// callback: function () { this.month() + 1 }\n\tfunction addFormatToken (token, padded, ordinal, callback) {\n\t    var func = callback;\n\t    if (typeof callback === 'string') {\n\t        func = function () {\n\t            return this[callback]();\n\t        };\n\t    }\n\t    if (token) {\n\t        formatTokenFunctions[token] = func;\n\t    }\n\t    if (padded) {\n\t        formatTokenFunctions[padded[0]] = function () {\n\t            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n\t        };\n\t    }\n\t    if (ordinal) {\n\t        formatTokenFunctions[ordinal] = function () {\n\t            return this.localeData().ordinal(func.apply(this, arguments), token);\n\t        };\n\t    }\n\t}\n\t\n\tfunction removeFormattingTokens(input) {\n\t    if (input.match(/\\[[\\s\\S]/)) {\n\t        return input.replace(/^\\[|\\]$/g, '');\n\t    }\n\t    return input.replace(/\\\\/g, '');\n\t}\n\t\n\tfunction makeFormatFunction(format) {\n\t    var array = format.match(formattingTokens), i, length;\n\t\n\t    for (i = 0, length = array.length; i < length; i++) {\n\t        if (formatTokenFunctions[array[i]]) {\n\t            array[i] = formatTokenFunctions[array[i]];\n\t        } else {\n\t            array[i] = removeFormattingTokens(array[i]);\n\t        }\n\t    }\n\t\n\t    return function (mom) {\n\t        var output = '', i;\n\t        for (i = 0; i < length; i++) {\n\t            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n\t        }\n\t        return output;\n\t    };\n\t}\n\t\n\t// format date using native date object\n\tfunction formatMoment(m, format) {\n\t    if (!m.isValid()) {\n\t        return m.localeData().invalidDate();\n\t    }\n\t\n\t    format = expandFormat(format, m.localeData());\n\t    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\t\n\t    return formatFunctions[format](m);\n\t}\n\t\n\tfunction expandFormat(format, locale) {\n\t    var i = 5;\n\t\n\t    function replaceLongDateFormatTokens(input) {\n\t        return locale.longDateFormat(input) || input;\n\t    }\n\t\n\t    localFormattingTokens.lastIndex = 0;\n\t    while (i >= 0 && localFormattingTokens.test(format)) {\n\t        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\t        localFormattingTokens.lastIndex = 0;\n\t        i -= 1;\n\t    }\n\t\n\t    return format;\n\t}\n\t\n\tvar match1         = /\\d/;            //       0 - 9\n\tvar match2         = /\\d\\d/;          //      00 - 99\n\tvar match3         = /\\d{3}/;         //     000 - 999\n\tvar match4         = /\\d{4}/;         //    0000 - 9999\n\tvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n\tvar match1to2      = /\\d\\d?/;         //       0 - 99\n\tvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n\tvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\tvar match1to3      = /\\d{1,3}/;       //       0 - 999\n\tvar match1to4      = /\\d{1,4}/;       //       0 - 9999\n\tvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\t\n\tvar matchUnsigned  = /\\d+/;           //       0 - inf\n\tvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\t\n\tvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\tvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\t\n\tvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\t\n\t// any word (or two) characters or numbers including two/three word month in arabic.\n\t// includes scottish gaelic two word and hyphenated months\n\tvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\t\n\t\n\tvar regexes = {};\n\t\n\tfunction addRegexToken (token, regex, strictRegex) {\n\t    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n\t        return (isStrict && strictRegex) ? strictRegex : regex;\n\t    };\n\t}\n\t\n\tfunction getParseRegexForToken (token, config) {\n\t    if (!hasOwnProp(regexes, token)) {\n\t        return new RegExp(unescapeFormat(token));\n\t    }\n\t\n\t    return regexes[token](config._strict, config._locale);\n\t}\n\t\n\t// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\tfunction unescapeFormat(s) {\n\t    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\t        return p1 || p2 || p3 || p4;\n\t    }));\n\t}\n\t\n\tfunction regexEscape(s) {\n\t    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t}\n\t\n\tvar tokens = {};\n\t\n\tfunction addParseToken (token, callback) {\n\t    var i, func = callback;\n\t    if (typeof token === 'string') {\n\t        token = [token];\n\t    }\n\t    if (isNumber(callback)) {\n\t        func = function (input, array) {\n\t            array[callback] = toInt(input);\n\t        };\n\t    }\n\t    for (i = 0; i < token.length; i++) {\n\t        tokens[token[i]] = func;\n\t    }\n\t}\n\t\n\tfunction addWeekParseToken (token, callback) {\n\t    addParseToken(token, function (input, array, config, token) {\n\t        config._w = config._w || {};\n\t        callback(input, config._w, config, token);\n\t    });\n\t}\n\t\n\tfunction addTimeToArrayFromToken(token, input, config) {\n\t    if (input != null && hasOwnProp(tokens, token)) {\n\t        tokens[token](input, config._a, config, token);\n\t    }\n\t}\n\t\n\tvar YEAR = 0;\n\tvar MONTH = 1;\n\tvar DATE = 2;\n\tvar HOUR = 3;\n\tvar MINUTE = 4;\n\tvar SECOND = 5;\n\tvar MILLISECOND = 6;\n\tvar WEEK = 7;\n\tvar WEEKDAY = 8;\n\t\n\tvar indexOf;\n\t\n\tif (Array.prototype.indexOf) {\n\t    indexOf = Array.prototype.indexOf;\n\t} else {\n\t    indexOf = function (o) {\n\t        // I know\n\t        var i;\n\t        for (i = 0; i < this.length; ++i) {\n\t            if (this[i] === o) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t}\n\t\n\tvar indexOf$1 = indexOf;\n\t\n\tfunction daysInMonth(year, month) {\n\t    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('M', ['MM', 2], 'Mo', function () {\n\t    return this.month() + 1;\n\t});\n\t\n\taddFormatToken('MMM', 0, 0, function (format) {\n\t    return this.localeData().monthsShort(this, format);\n\t});\n\t\n\taddFormatToken('MMMM', 0, 0, function (format) {\n\t    return this.localeData().months(this, format);\n\t});\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('month', 'M');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('month', 8);\n\t\n\t// PARSING\n\t\n\taddRegexToken('M',    match1to2);\n\taddRegexToken('MM',   match1to2, match2);\n\taddRegexToken('MMM',  function (isStrict, locale) {\n\t    return locale.monthsShortRegex(isStrict);\n\t});\n\taddRegexToken('MMMM', function (isStrict, locale) {\n\t    return locale.monthsRegex(isStrict);\n\t});\n\t\n\taddParseToken(['M', 'MM'], function (input, array) {\n\t    array[MONTH] = toInt(input) - 1;\n\t});\n\t\n\taddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n\t    var month = config._locale.monthsParse(input, token, config._strict);\n\t    // if we didn't find a month name, mark the date as invalid.\n\t    if (month != null) {\n\t        array[MONTH] = month;\n\t    } else {\n\t        getParsingFlags(config).invalidMonth = input;\n\t    }\n\t});\n\t\n\t// LOCALES\n\t\n\tvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n\tvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\tfunction localeMonths (m, format) {\n\t    if (!m) {\n\t        return isArray(this._months) ? this._months :\n\t            this._months['standalone'];\n\t    }\n\t    return isArray(this._months) ? this._months[m.month()] :\n\t        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\tfunction localeMonthsShort (m, format) {\n\t    if (!m) {\n\t        return isArray(this._monthsShort) ? this._monthsShort :\n\t            this._monthsShort['standalone'];\n\t    }\n\t    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n\t        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tfunction handleStrictParse(monthName, format, strict) {\n\t    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n\t    if (!this._monthsParse) {\n\t        // this is not used\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t        for (i = 0; i < 12; ++i) {\n\t            mom = createUTC([2000, i]);\n\t            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n\t            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeMonthsParse (monthName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._monthsParseExact) {\n\t        return handleStrictParse.call(this, monthName, format, strict);\n\t    }\n\t\n\t    if (!this._monthsParse) {\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t    }\n\t\n\t    // TODO: add sorting\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another\n\t    // see sorting in computeMonthsParse\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        if (strict && !this._longMonthsParse[i]) {\n\t            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n\t            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n\t        }\n\t        if (!strict && !this._monthsParse[i]) {\n\t            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction setMonth (mom, value) {\n\t    var dayOfMonth;\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return mom;\n\t    }\n\t\n\t    if (typeof value === 'string') {\n\t        if (/^\\d+$/.test(value)) {\n\t            value = toInt(value);\n\t        } else {\n\t            value = mom.localeData().monthsParse(value);\n\t            // TODO: Another silent failure?\n\t            if (!isNumber(value)) {\n\t                return mom;\n\t            }\n\t        }\n\t    }\n\t\n\t    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t    return mom;\n\t}\n\t\n\tfunction getSetMonth (value) {\n\t    if (value != null) {\n\t        setMonth(this, value);\n\t        hooks.updateOffset(this, true);\n\t        return this;\n\t    } else {\n\t        return get(this, 'Month');\n\t    }\n\t}\n\t\n\tfunction getDaysInMonth () {\n\t    return daysInMonth(this.year(), this.month());\n\t}\n\t\n\tvar defaultMonthsShortRegex = matchWord;\n\tfunction monthsShortRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsShortStrictRegex;\n\t        } else {\n\t            return this._monthsShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsShortRegex')) {\n\t            this._monthsShortRegex = defaultMonthsShortRegex;\n\t        }\n\t        return this._monthsShortStrictRegex && isStrict ?\n\t            this._monthsShortStrictRegex : this._monthsShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultMonthsRegex = matchWord;\n\tfunction monthsRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsStrictRegex;\n\t        } else {\n\t            return this._monthsRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            this._monthsRegex = defaultMonthsRegex;\n\t        }\n\t        return this._monthsStrictRegex && isStrict ?\n\t            this._monthsStrictRegex : this._monthsRegex;\n\t    }\n\t}\n\t\n\tfunction computeMonthsParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom;\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        shortPieces.push(this.monthsShort(mom, ''));\n\t        longPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.monthsShort(mom, ''));\n\t    }\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 12; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t    }\n\t    for (i = 0; i < 24; i++) {\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._monthsShortRegex = this._monthsRegex;\n\t    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Y', 0, 0, function () {\n\t    var y = this.year();\n\t    return y <= 9999 ? '' + y : '+' + y;\n\t});\n\t\n\taddFormatToken(0, ['YY', 2], 0, function () {\n\t    return this.year() % 100;\n\t});\n\t\n\taddFormatToken(0, ['YYYY',   4],       0, 'year');\n\taddFormatToken(0, ['YYYYY',  5],       0, 'year');\n\taddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('year', 'y');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('year', 1);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Y',      matchSigned);\n\taddRegexToken('YY',     match1to2, match2);\n\taddRegexToken('YYYY',   match1to4, match4);\n\taddRegexToken('YYYYY',  match1to6, match6);\n\taddRegexToken('YYYYYY', match1to6, match6);\n\t\n\taddParseToken(['YYYYY', 'YYYYYY'], YEAR);\n\taddParseToken('YYYY', function (input, array) {\n\t    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n\t});\n\taddParseToken('YY', function (input, array) {\n\t    array[YEAR] = hooks.parseTwoDigitYear(input);\n\t});\n\taddParseToken('Y', function (input, array) {\n\t    array[YEAR] = parseInt(input, 10);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction daysInYear(year) {\n\t    return isLeapYear(year) ? 366 : 365;\n\t}\n\t\n\tfunction isLeapYear(year) {\n\t    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t}\n\t\n\t// HOOKS\n\t\n\thooks.parseTwoDigitYear = function (input) {\n\t    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t};\n\t\n\t// MOMENTS\n\t\n\tvar getSetYear = makeGetSet('FullYear', true);\n\t\n\tfunction getIsLeapYear () {\n\t    return isLeapYear(this.year());\n\t}\n\t\n\tfunction createDate (y, m, d, h, M, s, ms) {\n\t    // can't just apply() to create a date:\n\t    // https://stackoverflow.com/q/181348\n\t    var date = new Date(y, m, d, h, M, s, ms);\n\t\n\t    // the date constructor remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n\t        date.setFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\tfunction createUTCDate (y) {\n\t    var date = new Date(Date.UTC.apply(null, arguments));\n\t\n\t    // the Date.UTC function remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n\t        date.setUTCFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\t// start-of-first-week - start-of-year\n\tfunction firstWeekOffset(year, dow, doy) {\n\t    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\t        fwd = 7 + dow - doy,\n\t        // first-week day local weekday -- which local weekday is fwd\n\t        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\t\n\t    return -fwdlw + fwd - 1;\n\t}\n\t\n\t// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\tfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n\t    var localWeekday = (7 + weekday - dow) % 7,\n\t        weekOffset = firstWeekOffset(year, dow, doy),\n\t        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n\t        resYear, resDayOfYear;\n\t\n\t    if (dayOfYear <= 0) {\n\t        resYear = year - 1;\n\t        resDayOfYear = daysInYear(resYear) + dayOfYear;\n\t    } else if (dayOfYear > daysInYear(year)) {\n\t        resYear = year + 1;\n\t        resDayOfYear = dayOfYear - daysInYear(year);\n\t    } else {\n\t        resYear = year;\n\t        resDayOfYear = dayOfYear;\n\t    }\n\t\n\t    return {\n\t        year: resYear,\n\t        dayOfYear: resDayOfYear\n\t    };\n\t}\n\t\n\tfunction weekOfYear(mom, dow, doy) {\n\t    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n\t        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n\t        resWeek, resYear;\n\t\n\t    if (week < 1) {\n\t        resYear = mom.year() - 1;\n\t        resWeek = week + weeksInYear(resYear, dow, doy);\n\t    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n\t        resWeek = week - weeksInYear(mom.year(), dow, doy);\n\t        resYear = mom.year() + 1;\n\t    } else {\n\t        resYear = mom.year();\n\t        resWeek = week;\n\t    }\n\t\n\t    return {\n\t        week: resWeek,\n\t        year: resYear\n\t    };\n\t}\n\t\n\tfunction weeksInYear(year, dow, doy) {\n\t    var weekOffset = firstWeekOffset(year, dow, doy),\n\t        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\t    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('w', ['ww', 2], 'wo', 'week');\n\taddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('week', 'w');\n\taddUnitAlias('isoWeek', 'W');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('week', 5);\n\taddUnitPriority('isoWeek', 5);\n\t\n\t// PARSING\n\t\n\taddRegexToken('w',  match1to2);\n\taddRegexToken('ww', match1to2, match2);\n\taddRegexToken('W',  match1to2);\n\taddRegexToken('WW', match1to2, match2);\n\t\n\taddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n\t    week[token.substr(0, 1)] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// LOCALES\n\t\n\tfunction localeWeek (mom) {\n\t    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t}\n\t\n\tvar defaultLocaleWeek = {\n\t    dow : 0, // Sunday is the first day of the week.\n\t    doy : 6  // The week that contains Jan 1st is the first week of the year.\n\t};\n\t\n\tfunction localeFirstDayOfWeek () {\n\t    return this._week.dow;\n\t}\n\t\n\tfunction localeFirstDayOfYear () {\n\t    return this._week.doy;\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeek (input) {\n\t    var week = this.localeData().week(this);\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\tfunction getSetISOWeek (input) {\n\t    var week = weekOfYear(this, 1, 4).week;\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('d', 0, 'do', 'day');\n\t\n\taddFormatToken('dd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysMin(this, format);\n\t});\n\t\n\taddFormatToken('ddd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysShort(this, format);\n\t});\n\t\n\taddFormatToken('dddd', 0, 0, function (format) {\n\t    return this.localeData().weekdays(this, format);\n\t});\n\t\n\taddFormatToken('e', 0, 0, 'weekday');\n\taddFormatToken('E', 0, 0, 'isoWeekday');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('day', 'd');\n\taddUnitAlias('weekday', 'e');\n\taddUnitAlias('isoWeekday', 'E');\n\t\n\t// PRIORITY\n\taddUnitPriority('day', 11);\n\taddUnitPriority('weekday', 11);\n\taddUnitPriority('isoWeekday', 11);\n\t\n\t// PARSING\n\t\n\taddRegexToken('d',    match1to2);\n\taddRegexToken('e',    match1to2);\n\taddRegexToken('E',    match1to2);\n\taddRegexToken('dd',   function (isStrict, locale) {\n\t    return locale.weekdaysMinRegex(isStrict);\n\t});\n\taddRegexToken('ddd',   function (isStrict, locale) {\n\t    return locale.weekdaysShortRegex(isStrict);\n\t});\n\taddRegexToken('dddd',   function (isStrict, locale) {\n\t    return locale.weekdaysRegex(isStrict);\n\t});\n\t\n\taddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n\t    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n\t    // if we didn't get a weekday name, mark the date as invalid\n\t    if (weekday != null) {\n\t        week.d = weekday;\n\t    } else {\n\t        getParsingFlags(config).invalidWeekday = input;\n\t    }\n\t});\n\t\n\taddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n\t    week[token] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction parseWeekday(input, locale) {\n\t    if (typeof input !== 'string') {\n\t        return input;\n\t    }\n\t\n\t    if (!isNaN(input)) {\n\t        return parseInt(input, 10);\n\t    }\n\t\n\t    input = locale.weekdaysParse(input);\n\t    if (typeof input === 'number') {\n\t        return input;\n\t    }\n\t\n\t    return null;\n\t}\n\t\n\tfunction parseIsoWeekday(input, locale) {\n\t    if (typeof input === 'string') {\n\t        return locale.weekdaysParse(input) % 7 || 7;\n\t    }\n\t    return isNaN(input) ? null : input;\n\t}\n\t\n\t// LOCALES\n\t\n\tvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\tfunction localeWeekdays (m, format) {\n\t    if (!m) {\n\t        return isArray(this._weekdays) ? this._weekdays :\n\t            this._weekdays['standalone'];\n\t    }\n\t    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n\t        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n\t}\n\t\n\tvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\tfunction localeWeekdaysShort (m) {\n\t    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n\t}\n\t\n\tvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\tfunction localeWeekdaysMin (m) {\n\t    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n\t}\n\t\n\tfunction handleStrictParse$1(weekdayName, format, strict) {\n\t    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t\n\t        for (i = 0; i < 7; ++i) {\n\t            mom = createUTC([2000, 1]).day(i);\n\t            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n\t            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n\t            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeWeekdaysParse (weekdayName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._weekdaysParseExact) {\n\t        return handleStrictParse$1.call(this, weekdayName, format, strict);\n\t    }\n\t\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._fullWeekdaysParse = [];\n\t    }\n\t\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t\n\t        mom = createUTC([2000, 1]).day(i);\n\t        if (strict && !this._fullWeekdaysParse[i]) {\n\t            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n\t        }\n\t        if (!this._weekdaysParse[i]) {\n\t            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n\t            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t    if (input != null) {\n\t        input = parseWeekday(input, this.localeData());\n\t        return this.add(input - day, 'd');\n\t    } else {\n\t        return day;\n\t    }\n\t}\n\t\n\tfunction getSetLocaleDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t    return input == null ? weekday : this.add(input - weekday, 'd');\n\t}\n\t\n\tfunction getSetISODayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t\n\t    // behaves the same as moment#day except\n\t    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t    // as a setter, sunday should belong to the previous week.\n\t\n\t    if (input != null) {\n\t        var weekday = parseIsoWeekday(input, this.localeData());\n\t        return this.day(this.day() % 7 ? weekday : weekday - 7);\n\t    } else {\n\t        return this.day() || 7;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysRegex = matchWord;\n\tfunction weekdaysRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysStrictRegex;\n\t        } else {\n\t            return this._weekdaysRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            this._weekdaysRegex = defaultWeekdaysRegex;\n\t        }\n\t        return this._weekdaysStrictRegex && isStrict ?\n\t            this._weekdaysStrictRegex : this._weekdaysRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysShortRegex = matchWord;\n\tfunction weekdaysShortRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysShortStrictRegex;\n\t        } else {\n\t            return this._weekdaysShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n\t            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n\t        }\n\t        return this._weekdaysShortStrictRegex && isStrict ?\n\t            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysMinRegex = matchWord;\n\tfunction weekdaysMinRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysMinStrictRegex;\n\t        } else {\n\t            return this._weekdaysMinRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n\t            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n\t        }\n\t        return this._weekdaysMinStrictRegex && isStrict ?\n\t            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n\t    }\n\t}\n\t\n\t\n\tfunction computeWeekdaysParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom, minp, shortp, longp;\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, 1]).day(i);\n\t        minp = this.weekdaysMin(mom, '');\n\t        shortp = this.weekdaysShort(mom, '');\n\t        longp = this.weekdays(mom, '');\n\t        minPieces.push(minp);\n\t        shortPieces.push(shortp);\n\t        longPieces.push(longp);\n\t        mixedPieces.push(minp);\n\t        mixedPieces.push(shortp);\n\t        mixedPieces.push(longp);\n\t    }\n\t    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    minPieces.sort(cmpLenRev);\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 7; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortRegex = this._weekdaysRegex;\n\t    this._weekdaysMinRegex = this._weekdaysRegex;\n\t\n\t    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction hFormat() {\n\t    return this.hours() % 12 || 12;\n\t}\n\t\n\tfunction kFormat() {\n\t    return this.hours() || 24;\n\t}\n\t\n\taddFormatToken('H', ['HH', 2], 0, 'hour');\n\taddFormatToken('h', ['hh', 2], 0, hFormat);\n\taddFormatToken('k', ['kk', 2], 0, kFormat);\n\t\n\taddFormatToken('hmm', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('hmmss', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\taddFormatToken('Hmm', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('Hmmss', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\tfunction meridiem (token, lowercase) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n\t    });\n\t}\n\t\n\tmeridiem('a', true);\n\tmeridiem('A', false);\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('hour', 'h');\n\t\n\t// PRIORITY\n\taddUnitPriority('hour', 13);\n\t\n\t// PARSING\n\t\n\tfunction matchMeridiem (isStrict, locale) {\n\t    return locale._meridiemParse;\n\t}\n\t\n\taddRegexToken('a',  matchMeridiem);\n\taddRegexToken('A',  matchMeridiem);\n\taddRegexToken('H',  match1to2);\n\taddRegexToken('h',  match1to2);\n\taddRegexToken('k',  match1to2);\n\taddRegexToken('HH', match1to2, match2);\n\taddRegexToken('hh', match1to2, match2);\n\taddRegexToken('kk', match1to2, match2);\n\t\n\taddRegexToken('hmm', match3to4);\n\taddRegexToken('hmmss', match5to6);\n\taddRegexToken('Hmm', match3to4);\n\taddRegexToken('Hmmss', match5to6);\n\t\n\taddParseToken(['H', 'HH'], HOUR);\n\taddParseToken(['k', 'kk'], function (input, array, config) {\n\t    var kInput = toInt(input);\n\t    array[HOUR] = kInput === 24 ? 0 : kInput;\n\t});\n\taddParseToken(['a', 'A'], function (input, array, config) {\n\t    config._isPm = config._locale.isPM(input);\n\t    config._meridiem = input;\n\t});\n\taddParseToken(['h', 'hh'], function (input, array, config) {\n\t    array[HOUR] = toInt(input);\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('Hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t});\n\taddParseToken('Hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t});\n\t\n\t// LOCALES\n\t\n\tfunction localeIsPM (input) {\n\t    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t    // Using charAt should be more compatible.\n\t    return ((input + '').toLowerCase().charAt(0) === 'p');\n\t}\n\t\n\tvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\tfunction localeMeridiem (hours, minutes, isLower) {\n\t    if (hours > 11) {\n\t        return isLower ? 'pm' : 'PM';\n\t    } else {\n\t        return isLower ? 'am' : 'AM';\n\t    }\n\t}\n\t\n\t\n\t// MOMENTS\n\t\n\t// Setting the hour should keep the time, because the user explicitly\n\t// specified which hour he wants. So trying to maintain the same hour (in\n\t// a new timezone) makes sense. Adding/subtracting hours does not follow\n\t// this rule.\n\tvar getSetHour = makeGetSet('Hours', true);\n\t\n\t// months\n\t// week\n\t// weekdays\n\t// meridiem\n\tvar baseConfig = {\n\t    calendar: defaultCalendar,\n\t    longDateFormat: defaultLongDateFormat,\n\t    invalidDate: defaultInvalidDate,\n\t    ordinal: defaultOrdinal,\n\t    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n\t    relativeTime: defaultRelativeTime,\n\t\n\t    months: defaultLocaleMonths,\n\t    monthsShort: defaultLocaleMonthsShort,\n\t\n\t    week: defaultLocaleWeek,\n\t\n\t    weekdays: defaultLocaleWeekdays,\n\t    weekdaysMin: defaultLocaleWeekdaysMin,\n\t    weekdaysShort: defaultLocaleWeekdaysShort,\n\t\n\t    meridiemParse: defaultLocaleMeridiemParse\n\t};\n\t\n\t// internal storage for locale config files\n\tvar locales = {};\n\tvar localeFamilies = {};\n\tvar globalLocale;\n\t\n\tfunction normalizeLocale(key) {\n\t    return key ? key.toLowerCase().replace('_', '-') : key;\n\t}\n\t\n\t// pick the locale from the array\n\t// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\tfunction chooseLocale(names) {\n\t    var i = 0, j, next, locale, split;\n\t\n\t    while (i < names.length) {\n\t        split = normalizeLocale(names[i]).split('-');\n\t        j = split.length;\n\t        next = normalizeLocale(names[i + 1]);\n\t        next = next ? next.split('-') : null;\n\t        while (j > 0) {\n\t            locale = loadLocale(split.slice(0, j).join('-'));\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\t                //the next array item is better than a shallower substring of this one\n\t                break;\n\t            }\n\t            j--;\n\t        }\n\t        i++;\n\t    }\n\t    return null;\n\t}\n\t\n\tfunction loadLocale(name) {\n\t    var oldLocale = null;\n\t    // TODO: Find a better way to register and load all the locales in Node\n\t    if (!locales[name] && (typeof module !== 'undefined') &&\n\t            module && module.exports) {\n\t        try {\n\t            oldLocale = globalLocale._abbr;\n\t            __webpack_require__(7)(\"./\" + name);\n\t            // because defineLocale currently also sets the global locale, we\n\t            // want to undo that for lazy loaded locales\n\t            getSetGlobalLocale(oldLocale);\n\t        } catch (e) { }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// This function will load locale and then set the global locale.  If\n\t// no arguments are passed in, it will simply return the current global\n\t// locale key.\n\tfunction getSetGlobalLocale (key, values) {\n\t    var data;\n\t    if (key) {\n\t        if (isUndefined(values)) {\n\t            data = getLocale(key);\n\t        }\n\t        else {\n\t            data = defineLocale(key, values);\n\t        }\n\t\n\t        if (data) {\n\t            // moment.duration._locale = moment._locale = data;\n\t            globalLocale = data;\n\t        }\n\t    }\n\t\n\t    return globalLocale._abbr;\n\t}\n\t\n\tfunction defineLocale (name, config) {\n\t    if (config !== null) {\n\t        var parentConfig = baseConfig;\n\t        config.abbr = name;\n\t        if (locales[name] != null) {\n\t            deprecateSimple('defineLocaleOverride',\n\t                    'use moment.updateLocale(localeName, config) to change ' +\n\t                    'an existing locale. moment.defineLocale(localeName, ' +\n\t                    'config) should only be used for creating a new locale ' +\n\t                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n\t            parentConfig = locales[name]._config;\n\t        } else if (config.parentLocale != null) {\n\t            if (locales[config.parentLocale] != null) {\n\t                parentConfig = locales[config.parentLocale]._config;\n\t            } else {\n\t                if (!localeFamilies[config.parentLocale]) {\n\t                    localeFamilies[config.parentLocale] = [];\n\t                }\n\t                localeFamilies[config.parentLocale].push({\n\t                    name: name,\n\t                    config: config\n\t                });\n\t                return null;\n\t            }\n\t        }\n\t        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\t\n\t        if (localeFamilies[name]) {\n\t            localeFamilies[name].forEach(function (x) {\n\t                defineLocale(x.name, x.config);\n\t            });\n\t        }\n\t\n\t        // backwards compat for now: also set the locale\n\t        // make sure we set the locale AFTER all child locales have been\n\t        // created, so we won't end up with the child locale set.\n\t        getSetGlobalLocale(name);\n\t\n\t\n\t        return locales[name];\n\t    } else {\n\t        // useful for testing\n\t        delete locales[name];\n\t        return null;\n\t    }\n\t}\n\t\n\tfunction updateLocale(name, config) {\n\t    if (config != null) {\n\t        var locale, parentConfig = baseConfig;\n\t        // MERGE\n\t        if (locales[name] != null) {\n\t            parentConfig = locales[name]._config;\n\t        }\n\t        config = mergeConfigs(parentConfig, config);\n\t        locale = new Locale(config);\n\t        locale.parentLocale = locales[name];\n\t        locales[name] = locale;\n\t\n\t        // backwards compat for now: also set the locale\n\t        getSetGlobalLocale(name);\n\t    } else {\n\t        // pass null for config to unupdate, useful for tests\n\t        if (locales[name] != null) {\n\t            if (locales[name].parentLocale != null) {\n\t                locales[name] = locales[name].parentLocale;\n\t            } else if (locales[name] != null) {\n\t                delete locales[name];\n\t            }\n\t        }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// returns locale data\n\tfunction getLocale (key) {\n\t    var locale;\n\t\n\t    if (key && key._locale && key._locale._abbr) {\n\t        key = key._locale._abbr;\n\t    }\n\t\n\t    if (!key) {\n\t        return globalLocale;\n\t    }\n\t\n\t    if (!isArray(key)) {\n\t        //short-circuit everything else\n\t        locale = loadLocale(key);\n\t        if (locale) {\n\t            return locale;\n\t        }\n\t        key = [key];\n\t    }\n\t\n\t    return chooseLocale(key);\n\t}\n\t\n\tfunction listLocales() {\n\t    return keys$1(locales);\n\t}\n\t\n\tfunction checkOverflow (m) {\n\t    var overflow;\n\t    var a = m._a;\n\t\n\t    if (a && getParsingFlags(m).overflow === -2) {\n\t        overflow =\n\t            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n\t            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n\t            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n\t            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n\t            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n\t            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n\t            -1;\n\t\n\t        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\t            overflow = DATE;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n\t            overflow = WEEK;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n\t            overflow = WEEKDAY;\n\t        }\n\t\n\t        getParsingFlags(m).overflow = overflow;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// iso 8601 regex\n\t// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\tvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\tvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\t\n\tvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\t\n\tvar isoDates = [\n\t    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n\t    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n\t    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n\t    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n\t    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n\t    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n\t    ['YYYYYYMMDD', /[+-]\\d{10}/],\n\t    ['YYYYMMDD', /\\d{8}/],\n\t    // YYYYMM is NOT allowed by the standard\n\t    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n\t    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n\t    ['YYYYDDD', /\\d{7}/]\n\t];\n\t\n\t// iso time formats and regexes\n\tvar isoTimes = [\n\t    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\t    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n\t    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n\t    ['HH:mm', /\\d\\d:\\d\\d/],\n\t    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n\t    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n\t    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n\t    ['HHmm', /\\d\\d\\d\\d/],\n\t    ['HH', /\\d\\d/]\n\t];\n\t\n\tvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\t\n\t// date from iso format\n\tfunction configFromISO(config) {\n\t    var i, l,\n\t        string = config._i,\n\t        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n\t        allowTime, dateFormat, timeFormat, tzFormat;\n\t\n\t    if (match) {\n\t        getParsingFlags(config).iso = true;\n\t\n\t        for (i = 0, l = isoDates.length; i < l; i++) {\n\t            if (isoDates[i][1].exec(match[1])) {\n\t                dateFormat = isoDates[i][0];\n\t                allowTime = isoDates[i][2] !== false;\n\t                break;\n\t            }\n\t        }\n\t        if (dateFormat == null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[3]) {\n\t            for (i = 0, l = isoTimes.length; i < l; i++) {\n\t                if (isoTimes[i][1].exec(match[3])) {\n\t                    // match[2] should be 'T' or space\n\t                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n\t                    break;\n\t                }\n\t            }\n\t            if (timeFormat == null) {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        if (!allowTime && timeFormat != null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[4]) {\n\t            if (tzRegex.exec(match[4])) {\n\t                tzFormat = 'Z';\n\t            } else {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\t        configFromStringAndFormat(config);\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\tvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\t\n\t// date and time from ref 2822 format\n\tfunction configFromRFC2822(config) {\n\t    var string, match, dayFormat,\n\t        dateFormat, timeFormat, tzFormat;\n\t    var timezones = {\n\t        ' GMT': ' +0000',\n\t        ' EDT': ' -0400',\n\t        ' EST': ' -0500',\n\t        ' CDT': ' -0500',\n\t        ' CST': ' -0600',\n\t        ' MDT': ' -0600',\n\t        ' MST': ' -0700',\n\t        ' PDT': ' -0700',\n\t        ' PST': ' -0800'\n\t    };\n\t    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n\t    var timezone, timezoneIndex;\n\t\n\t    string = config._i\n\t        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n\t        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n\t        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n\t    match = basicRfcRegex.exec(string);\n\t\n\t    if (match) {\n\t        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n\t        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n\t        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\t\n\t        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n\t        if (match[1]) { // day of week given\n\t            var momentDate = new Date(match[2]);\n\t            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\t\n\t            if (match[1].substr(0,3) !== momentDay) {\n\t                getParsingFlags(config).weekdayMismatch = true;\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t\n\t        switch (match[5].length) {\n\t            case 2: // military\n\t                if (timezoneIndex === 0) {\n\t                    timezone = ' +0000';\n\t                } else {\n\t                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n\t                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n\t                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n\t                }\n\t                break;\n\t            case 4: // Zone\n\t                timezone = timezones[match[5]];\n\t                break;\n\t            default: // UT or +/-9999\n\t                timezone = timezones[' GMT'];\n\t        }\n\t        match[5] = timezone;\n\t        config._i = match.splice(1).join('');\n\t        tzFormat = ' ZZ';\n\t        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n\t        configFromStringAndFormat(config);\n\t        getParsingFlags(config).rfc2822 = true;\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// date from iso format or fallback\n\tfunction configFromString(config) {\n\t    var matched = aspNetJsonRegex.exec(config._i);\n\t\n\t    if (matched !== null) {\n\t        config._d = new Date(+matched[1]);\n\t        return;\n\t    }\n\t\n\t    configFromISO(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t    } else {\n\t        return;\n\t    }\n\t\n\t    configFromRFC2822(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t    } else {\n\t        return;\n\t    }\n\t\n\t    // Final attempt, use Input Fallback\n\t    hooks.createFromInputFallback(config);\n\t}\n\t\n\thooks.createFromInputFallback = deprecate(\n\t    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n\t    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n\t    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n\t    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n\t    function (config) {\n\t        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t    }\n\t);\n\t\n\t// Pick the first defined of two or three arguments.\n\tfunction defaults(a, b, c) {\n\t    if (a != null) {\n\t        return a;\n\t    }\n\t    if (b != null) {\n\t        return b;\n\t    }\n\t    return c;\n\t}\n\t\n\tfunction currentDateArray(config) {\n\t    // hooks is actually the exported moment object\n\t    var nowValue = new Date(hooks.now());\n\t    if (config._useUTC) {\n\t        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n\t    }\n\t    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n\t}\n\t\n\t// convert an array to a date.\n\t// the array should mirror the parameters below\n\t// note: all values past the year are optional and will default to the lowest possible value.\n\t// [year, month, day , hour, minute, second, millisecond]\n\tfunction configFromArray (config) {\n\t    var i, date, input = [], currentDate, yearToUse;\n\t\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    currentDate = currentDateArray(config);\n\t\n\t    //compute day of the year from weeks and weekdays\n\t    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t        dayOfYearFromWeekInfo(config);\n\t    }\n\t\n\t    //if the day of the year is set, figure out what it is\n\t    if (config._dayOfYear != null) {\n\t        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\t\n\t        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n\t            getParsingFlags(config)._overflowDayOfYear = true;\n\t        }\n\t\n\t        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n\t        config._a[MONTH] = date.getUTCMonth();\n\t        config._a[DATE] = date.getUTCDate();\n\t    }\n\t\n\t    // Default to current date.\n\t    // * if no year, month, day of month are given, default to today\n\t    // * if day of month is given, default month and year\n\t    // * if month is given, default only year\n\t    // * if year is given, don't default anything\n\t    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t        config._a[i] = input[i] = currentDate[i];\n\t    }\n\t\n\t    // Zero out whatever was not defaulted, including time\n\t    for (; i < 7; i++) {\n\t        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n\t    }\n\t\n\t    // Check for 24:00:00.000\n\t    if (config._a[HOUR] === 24 &&\n\t            config._a[MINUTE] === 0 &&\n\t            config._a[SECOND] === 0 &&\n\t            config._a[MILLISECOND] === 0) {\n\t        config._nextDay = true;\n\t        config._a[HOUR] = 0;\n\t    }\n\t\n\t    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n\t    // Apply timezone offset from input. The actual utcOffset can be changed\n\t    // with parseZone.\n\t    if (config._tzm != null) {\n\t        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t    }\n\t\n\t    if (config._nextDay) {\n\t        config._a[HOUR] = 24;\n\t    }\n\t}\n\t\n\tfunction dayOfYearFromWeekInfo(config) {\n\t    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\t\n\t    w = config._w;\n\t    if (w.GG != null || w.W != null || w.E != null) {\n\t        dow = 1;\n\t        doy = 4;\n\t\n\t        // TODO: We need to take the current isoWeekYear, but that depends on\n\t        // how we interpret now (local, utc, fixed offset). So create\n\t        // a now version of current config (take local/utc/offset flags, and\n\t        // create now).\n\t        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n\t        week = defaults(w.W, 1);\n\t        weekday = defaults(w.E, 1);\n\t        if (weekday < 1 || weekday > 7) {\n\t            weekdayOverflow = true;\n\t        }\n\t    } else {\n\t        dow = config._locale._week.dow;\n\t        doy = config._locale._week.doy;\n\t\n\t        var curWeek = weekOfYear(createLocal(), dow, doy);\n\t\n\t        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\t\n\t        // Default to current week.\n\t        week = defaults(w.w, curWeek.week);\n\t\n\t        if (w.d != null) {\n\t            // weekday -- low day numbers are considered next week\n\t            weekday = w.d;\n\t            if (weekday < 0 || weekday > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else if (w.e != null) {\n\t            // local weekday -- counting starts from begining of week\n\t            weekday = w.e + dow;\n\t            if (w.e < 0 || w.e > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else {\n\t            // default to begining of week\n\t            weekday = dow;\n\t        }\n\t    }\n\t    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n\t        getParsingFlags(config)._overflowWeeks = true;\n\t    } else if (weekdayOverflow != null) {\n\t        getParsingFlags(config)._overflowWeekday = true;\n\t    } else {\n\t        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n\t        config._a[YEAR] = temp.year;\n\t        config._dayOfYear = temp.dayOfYear;\n\t    }\n\t}\n\t\n\t// constant that refers to the ISO standard\n\thooks.ISO_8601 = function () {};\n\t\n\t// constant that refers to the RFC 2822 form\n\thooks.RFC_2822 = function () {};\n\t\n\t// date from string and format string\n\tfunction configFromStringAndFormat(config) {\n\t    // TODO: Move this to another part of the creation flow to prevent circular deps\n\t    if (config._f === hooks.ISO_8601) {\n\t        configFromISO(config);\n\t        return;\n\t    }\n\t    if (config._f === hooks.RFC_2822) {\n\t        configFromRFC2822(config);\n\t        return;\n\t    }\n\t    config._a = [];\n\t    getParsingFlags(config).empty = true;\n\t\n\t    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t    var string = '' + config._i,\n\t        i, parsedInput, tokens, token, skipped,\n\t        stringLength = string.length,\n\t        totalParsedInputLength = 0;\n\t\n\t    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\n\t    for (i = 0; i < tokens.length; i++) {\n\t        token = tokens[i];\n\t        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\t        // console.log('token', token, 'parsedInput', parsedInput,\n\t        //         'regex', getParseRegexForToken(token, config));\n\t        if (parsedInput) {\n\t            skipped = string.substr(0, string.indexOf(parsedInput));\n\t            if (skipped.length > 0) {\n\t                getParsingFlags(config).unusedInput.push(skipped);\n\t            }\n\t            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\t            totalParsedInputLength += parsedInput.length;\n\t        }\n\t        // don't parse if it's not a known token\n\t        if (formatTokenFunctions[token]) {\n\t            if (parsedInput) {\n\t                getParsingFlags(config).empty = false;\n\t            }\n\t            else {\n\t                getParsingFlags(config).unusedTokens.push(token);\n\t            }\n\t            addTimeToArrayFromToken(token, parsedInput, config);\n\t        }\n\t        else if (config._strict && !parsedInput) {\n\t            getParsingFlags(config).unusedTokens.push(token);\n\t        }\n\t    }\n\t\n\t    // add remaining unparsed input length to the string\n\t    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\t    if (string.length > 0) {\n\t        getParsingFlags(config).unusedInput.push(string);\n\t    }\n\t\n\t    // clear _12h flag if hour is <= 12\n\t    if (config._a[HOUR] <= 12 &&\n\t        getParsingFlags(config).bigHour === true &&\n\t        config._a[HOUR] > 0) {\n\t        getParsingFlags(config).bigHour = undefined;\n\t    }\n\t\n\t    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n\t    getParsingFlags(config).meridiem = config._meridiem;\n\t    // handle meridiem\n\t    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\t\n\t    configFromArray(config);\n\t    checkOverflow(config);\n\t}\n\t\n\t\n\tfunction meridiemFixWrap (locale, hour, meridiem) {\n\t    var isPm;\n\t\n\t    if (meridiem == null) {\n\t        // nothing to do\n\t        return hour;\n\t    }\n\t    if (locale.meridiemHour != null) {\n\t        return locale.meridiemHour(hour, meridiem);\n\t    } else if (locale.isPM != null) {\n\t        // Fallback\n\t        isPm = locale.isPM(meridiem);\n\t        if (isPm && hour < 12) {\n\t            hour += 12;\n\t        }\n\t        if (!isPm && hour === 12) {\n\t            hour = 0;\n\t        }\n\t        return hour;\n\t    } else {\n\t        // this is not supposed to happen\n\t        return hour;\n\t    }\n\t}\n\t\n\t// date from string and array of format strings\n\tfunction configFromStringAndArray(config) {\n\t    var tempConfig,\n\t        bestMoment,\n\t\n\t        scoreToBeat,\n\t        i,\n\t        currentScore;\n\t\n\t    if (config._f.length === 0) {\n\t        getParsingFlags(config).invalidFormat = true;\n\t        config._d = new Date(NaN);\n\t        return;\n\t    }\n\t\n\t    for (i = 0; i < config._f.length; i++) {\n\t        currentScore = 0;\n\t        tempConfig = copyConfig({}, config);\n\t        if (config._useUTC != null) {\n\t            tempConfig._useUTC = config._useUTC;\n\t        }\n\t        tempConfig._f = config._f[i];\n\t        configFromStringAndFormat(tempConfig);\n\t\n\t        if (!isValid(tempConfig)) {\n\t            continue;\n\t        }\n\t\n\t        // if there is any input that was not parsed add a penalty for that format\n\t        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\t\n\t        //or tokens\n\t        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\t\n\t        getParsingFlags(tempConfig).score = currentScore;\n\t\n\t        if (scoreToBeat == null || currentScore < scoreToBeat) {\n\t            scoreToBeat = currentScore;\n\t            bestMoment = tempConfig;\n\t        }\n\t    }\n\t\n\t    extend(config, bestMoment || tempConfig);\n\t}\n\t\n\tfunction configFromObject(config) {\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    var i = normalizeObjectUnits(config._i);\n\t    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n\t        return obj && parseInt(obj, 10);\n\t    });\n\t\n\t    configFromArray(config);\n\t}\n\t\n\tfunction createFromConfig (config) {\n\t    var res = new Moment(checkOverflow(prepareConfig(config)));\n\t    if (res._nextDay) {\n\t        // Adding is smart enough around DST\n\t        res.add(1, 'd');\n\t        res._nextDay = undefined;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\tfunction prepareConfig (config) {\n\t    var input = config._i,\n\t        format = config._f;\n\t\n\t    config._locale = config._locale || getLocale(config._l);\n\t\n\t    if (input === null || (format === undefined && input === '')) {\n\t        return createInvalid({nullInput: true});\n\t    }\n\t\n\t    if (typeof input === 'string') {\n\t        config._i = input = config._locale.preparse(input);\n\t    }\n\t\n\t    if (isMoment(input)) {\n\t        return new Moment(checkOverflow(input));\n\t    } else if (isDate(input)) {\n\t        config._d = input;\n\t    } else if (isArray(format)) {\n\t        configFromStringAndArray(config);\n\t    } else if (format) {\n\t        configFromStringAndFormat(config);\n\t    }  else {\n\t        configFromInput(config);\n\t    }\n\t\n\t    if (!isValid(config)) {\n\t        config._d = null;\n\t    }\n\t\n\t    return config;\n\t}\n\t\n\tfunction configFromInput(config) {\n\t    var input = config._i;\n\t    if (isUndefined(input)) {\n\t        config._d = new Date(hooks.now());\n\t    } else if (isDate(input)) {\n\t        config._d = new Date(input.valueOf());\n\t    } else if (typeof input === 'string') {\n\t        configFromString(config);\n\t    } else if (isArray(input)) {\n\t        config._a = map(input.slice(0), function (obj) {\n\t            return parseInt(obj, 10);\n\t        });\n\t        configFromArray(config);\n\t    } else if (isObject(input)) {\n\t        configFromObject(config);\n\t    } else if (isNumber(input)) {\n\t        // from milliseconds\n\t        config._d = new Date(input);\n\t    } else {\n\t        hooks.createFromInputFallback(config);\n\t    }\n\t}\n\t\n\tfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n\t    var c = {};\n\t\n\t    if (locale === true || locale === false) {\n\t        strict = locale;\n\t        locale = undefined;\n\t    }\n\t\n\t    if ((isObject(input) && isObjectEmpty(input)) ||\n\t            (isArray(input) && input.length === 0)) {\n\t        input = undefined;\n\t    }\n\t    // object construction must be done this way.\n\t    // https://github.com/moment/moment/issues/1423\n\t    c._isAMomentObject = true;\n\t    c._useUTC = c._isUTC = isUTC;\n\t    c._l = locale;\n\t    c._i = input;\n\t    c._f = format;\n\t    c._strict = strict;\n\t\n\t    return createFromConfig(c);\n\t}\n\t\n\tfunction createLocal (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, false);\n\t}\n\t\n\tvar prototypeMin = deprecate(\n\t    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other < this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\tvar prototypeMax = deprecate(\n\t    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other > this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\t// Pick a moment m from moments so that m[fn](other) is true for all\n\t// other. This relies on the function fn to be transitive.\n\t//\n\t// moments should either be an array of moment objects or an array, whose\n\t// first element is an array of moment objects.\n\tfunction pickBy(fn, moments) {\n\t    var res, i;\n\t    if (moments.length === 1 && isArray(moments[0])) {\n\t        moments = moments[0];\n\t    }\n\t    if (!moments.length) {\n\t        return createLocal();\n\t    }\n\t    res = moments[0];\n\t    for (i = 1; i < moments.length; ++i) {\n\t        if (!moments[i].isValid() || moments[i][fn](res)) {\n\t            res = moments[i];\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\t// TODO: Use [].sort instead?\n\tfunction min () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isBefore', args);\n\t}\n\t\n\tfunction max () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isAfter', args);\n\t}\n\t\n\tvar now = function () {\n\t    return Date.now ? Date.now() : +(new Date());\n\t};\n\t\n\tvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\t\n\tfunction isDurationValid(m) {\n\t    for (var key in m) {\n\t        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n\t            return false;\n\t        }\n\t    }\n\t\n\t    var unitHasDecimal = false;\n\t    for (var i = 0; i < ordering.length; ++i) {\n\t        if (m[ordering[i]]) {\n\t            if (unitHasDecimal) {\n\t                return false; // only allow non-integers for smallest unit\n\t            }\n\t            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n\t                unitHasDecimal = true;\n\t            }\n\t        }\n\t    }\n\t\n\t    return true;\n\t}\n\t\n\tfunction isValid$1() {\n\t    return this._isValid;\n\t}\n\t\n\tfunction createInvalid$1() {\n\t    return createDuration(NaN);\n\t}\n\t\n\tfunction Duration (duration) {\n\t    var normalizedInput = normalizeObjectUnits(duration),\n\t        years = normalizedInput.year || 0,\n\t        quarters = normalizedInput.quarter || 0,\n\t        months = normalizedInput.month || 0,\n\t        weeks = normalizedInput.week || 0,\n\t        days = normalizedInput.day || 0,\n\t        hours = normalizedInput.hour || 0,\n\t        minutes = normalizedInput.minute || 0,\n\t        seconds = normalizedInput.second || 0,\n\t        milliseconds = normalizedInput.millisecond || 0;\n\t\n\t    this._isValid = isDurationValid(normalizedInput);\n\t\n\t    // representation for dateAddRemove\n\t    this._milliseconds = +milliseconds +\n\t        seconds * 1e3 + // 1000\n\t        minutes * 6e4 + // 1000 * 60\n\t        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n\t    // Because of dateAddRemove treats 24 hours as different from a\n\t    // day when working around DST, we need to store them separately\n\t    this._days = +days +\n\t        weeks * 7;\n\t    // It is impossible translate months into days without knowing\n\t    // which months you are are talking about, so we have to store\n\t    // it separately.\n\t    this._months = +months +\n\t        quarters * 3 +\n\t        years * 12;\n\t\n\t    this._data = {};\n\t\n\t    this._locale = getLocale();\n\t\n\t    this._bubble();\n\t}\n\t\n\tfunction isDuration (obj) {\n\t    return obj instanceof Duration;\n\t}\n\t\n\tfunction absRound (number) {\n\t    if (number < 0) {\n\t        return Math.round(-1 * number) * -1;\n\t    } else {\n\t        return Math.round(number);\n\t    }\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction offset (token, separator) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        var offset = this.utcOffset();\n\t        var sign = '+';\n\t        if (offset < 0) {\n\t            offset = -offset;\n\t            sign = '-';\n\t        }\n\t        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n\t    });\n\t}\n\t\n\toffset('Z', ':');\n\toffset('ZZ', '');\n\t\n\t// PARSING\n\t\n\taddRegexToken('Z',  matchShortOffset);\n\taddRegexToken('ZZ', matchShortOffset);\n\taddParseToken(['Z', 'ZZ'], function (input, array, config) {\n\t    config._useUTC = true;\n\t    config._tzm = offsetFromString(matchShortOffset, input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// timezone chunker\n\t// '+10:00' > ['10',  '00']\n\t// '-1530'  > ['-15', '30']\n\tvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\t\n\tfunction offsetFromString(matcher, string) {\n\t    var matches = (string || '').match(matcher);\n\t\n\t    if (matches === null) {\n\t        return null;\n\t    }\n\t\n\t    var chunk   = matches[matches.length - 1] || [];\n\t    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n\t    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\t\n\t    return minutes === 0 ?\n\t      0 :\n\t      parts[0] === '+' ? minutes : -minutes;\n\t}\n\t\n\t// Return a moment from input, that is local/utc/zone equivalent to model.\n\tfunction cloneWithOffset(input, model) {\n\t    var res, diff;\n\t    if (model._isUTC) {\n\t        res = model.clone();\n\t        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n\t        // Use low-level api, because this fn is low-level api.\n\t        res._d.setTime(res._d.valueOf() + diff);\n\t        hooks.updateOffset(res, false);\n\t        return res;\n\t    } else {\n\t        return createLocal(input).local();\n\t    }\n\t}\n\t\n\tfunction getDateOffset (m) {\n\t    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t    // https://github.com/moment/moment/pull/1871\n\t    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n\t}\n\t\n\t// HOOKS\n\t\n\t// This function will be called whenever a moment is mutated.\n\t// It is intended to keep the offset in sync with the timezone.\n\thooks.updateOffset = function () {};\n\t\n\t// MOMENTS\n\t\n\t// keepLocalTime = true means only change the timezone, without\n\t// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t// +0200, so we adjust the time as needed, to be valid.\n\t//\n\t// Keeping the time actually adds/subtracts (one hour)\n\t// from the actual represented time. That is why we call updateOffset\n\t// a second time. In case it wants us to change the offset again\n\t// _changeInProgress == true case, then we have to adjust, because\n\t// there is no such time in the given timezone.\n\tfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n\t    var offset = this._offset || 0,\n\t        localAdjust;\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    if (input != null) {\n\t        if (typeof input === 'string') {\n\t            input = offsetFromString(matchShortOffset, input);\n\t            if (input === null) {\n\t                return this;\n\t            }\n\t        } else if (Math.abs(input) < 16 && !keepMinutes) {\n\t            input = input * 60;\n\t        }\n\t        if (!this._isUTC && keepLocalTime) {\n\t            localAdjust = getDateOffset(this);\n\t        }\n\t        this._offset = input;\n\t        this._isUTC = true;\n\t        if (localAdjust != null) {\n\t            this.add(localAdjust, 'm');\n\t        }\n\t        if (offset !== input) {\n\t            if (!keepLocalTime || this._changeInProgress) {\n\t                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n\t            } else if (!this._changeInProgress) {\n\t                this._changeInProgress = true;\n\t                hooks.updateOffset(this, true);\n\t                this._changeInProgress = null;\n\t            }\n\t        }\n\t        return this;\n\t    } else {\n\t        return this._isUTC ? offset : getDateOffset(this);\n\t    }\n\t}\n\t\n\tfunction getSetZone (input, keepLocalTime) {\n\t    if (input != null) {\n\t        if (typeof input !== 'string') {\n\t            input = -input;\n\t        }\n\t\n\t        this.utcOffset(input, keepLocalTime);\n\t\n\t        return this;\n\t    } else {\n\t        return -this.utcOffset();\n\t    }\n\t}\n\t\n\tfunction setOffsetToUTC (keepLocalTime) {\n\t    return this.utcOffset(0, keepLocalTime);\n\t}\n\t\n\tfunction setOffsetToLocal (keepLocalTime) {\n\t    if (this._isUTC) {\n\t        this.utcOffset(0, keepLocalTime);\n\t        this._isUTC = false;\n\t\n\t        if (keepLocalTime) {\n\t            this.subtract(getDateOffset(this), 'm');\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction setOffsetToParsedOffset () {\n\t    if (this._tzm != null) {\n\t        this.utcOffset(this._tzm, false, true);\n\t    } else if (typeof this._i === 'string') {\n\t        var tZone = offsetFromString(matchOffset, this._i);\n\t        if (tZone != null) {\n\t            this.utcOffset(tZone);\n\t        }\n\t        else {\n\t            this.utcOffset(0, true);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction hasAlignedHourOffset (input) {\n\t    if (!this.isValid()) {\n\t        return false;\n\t    }\n\t    input = input ? createLocal(input).utcOffset() : 0;\n\t\n\t    return (this.utcOffset() - input) % 60 === 0;\n\t}\n\t\n\tfunction isDaylightSavingTime () {\n\t    return (\n\t        this.utcOffset() > this.clone().month(0).utcOffset() ||\n\t        this.utcOffset() > this.clone().month(5).utcOffset()\n\t    );\n\t}\n\t\n\tfunction isDaylightSavingTimeShifted () {\n\t    if (!isUndefined(this._isDSTShifted)) {\n\t        return this._isDSTShifted;\n\t    }\n\t\n\t    var c = {};\n\t\n\t    copyConfig(c, this);\n\t    c = prepareConfig(c);\n\t\n\t    if (c._a) {\n\t        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n\t        this._isDSTShifted = this.isValid() &&\n\t            compareArrays(c._a, other.toArray()) > 0;\n\t    } else {\n\t        this._isDSTShifted = false;\n\t    }\n\t\n\t    return this._isDSTShifted;\n\t}\n\t\n\tfunction isLocal () {\n\t    return this.isValid() ? !this._isUTC : false;\n\t}\n\t\n\tfunction isUtcOffset () {\n\t    return this.isValid() ? this._isUTC : false;\n\t}\n\t\n\tfunction isUtc () {\n\t    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n\t}\n\t\n\t// ASP.NET json date format regex\n\tvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\t\n\t// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t// and further modified to allow for strings containing both week and day\n\tvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\t\n\tfunction createDuration (input, key) {\n\t    var duration = input,\n\t        // matching against regexp is expensive, do it on demand\n\t        match = null,\n\t        sign,\n\t        ret,\n\t        diffRes;\n\t\n\t    if (isDuration(input)) {\n\t        duration = {\n\t            ms : input._milliseconds,\n\t            d  : input._days,\n\t            M  : input._months\n\t        };\n\t    } else if (isNumber(input)) {\n\t        duration = {};\n\t        if (key) {\n\t            duration[key] = input;\n\t        } else {\n\t            duration.milliseconds = input;\n\t        }\n\t    } else if (!!(match = aspNetRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y  : 0,\n\t            d  : toInt(match[DATE])                         * sign,\n\t            h  : toInt(match[HOUR])                         * sign,\n\t            m  : toInt(match[MINUTE])                       * sign,\n\t            s  : toInt(match[SECOND])                       * sign,\n\t            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\t        };\n\t    } else if (!!(match = isoRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y : parseIso(match[2], sign),\n\t            M : parseIso(match[3], sign),\n\t            w : parseIso(match[4], sign),\n\t            d : parseIso(match[5], sign),\n\t            h : parseIso(match[6], sign),\n\t            m : parseIso(match[7], sign),\n\t            s : parseIso(match[8], sign)\n\t        };\n\t    } else if (duration == null) {// checks for null or undefined\n\t        duration = {};\n\t    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n\t        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\t\n\t        duration = {};\n\t        duration.ms = diffRes.milliseconds;\n\t        duration.M = diffRes.months;\n\t    }\n\t\n\t    ret = new Duration(duration);\n\t\n\t    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n\t        ret._locale = input._locale;\n\t    }\n\t\n\t    return ret;\n\t}\n\t\n\tcreateDuration.fn = Duration.prototype;\n\tcreateDuration.invalid = createInvalid$1;\n\t\n\tfunction parseIso (inp, sign) {\n\t    // We'd normally use ~~inp for this, but unfortunately it also\n\t    // converts floats to ints.\n\t    // inp may be undefined, so careful calling replace on it.\n\t    var res = inp && parseFloat(inp.replace(',', '.'));\n\t    // apply sign while we're at it\n\t    return (isNaN(res) ? 0 : res) * sign;\n\t}\n\t\n\tfunction positiveMomentsDifference(base, other) {\n\t    var res = {milliseconds: 0, months: 0};\n\t\n\t    res.months = other.month() - base.month() +\n\t        (other.year() - base.year()) * 12;\n\t    if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t        --res.months;\n\t    }\n\t\n\t    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\t\n\t    return res;\n\t}\n\t\n\tfunction momentsDifference(base, other) {\n\t    var res;\n\t    if (!(base.isValid() && other.isValid())) {\n\t        return {milliseconds: 0, months: 0};\n\t    }\n\t\n\t    other = cloneWithOffset(other, base);\n\t    if (base.isBefore(other)) {\n\t        res = positiveMomentsDifference(base, other);\n\t    } else {\n\t        res = positiveMomentsDifference(other, base);\n\t        res.milliseconds = -res.milliseconds;\n\t        res.months = -res.months;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\t// TODO: remove 'name' arg after deprecation is removed\n\tfunction createAdder(direction, name) {\n\t    return function (val, period) {\n\t        var dur, tmp;\n\t        //invert the arguments, but complain about it\n\t        if (period !== null && !isNaN(+period)) {\n\t            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n\t            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n\t            tmp = val; val = period; period = tmp;\n\t        }\n\t\n\t        val = typeof val === 'string' ? +val : val;\n\t        dur = createDuration(val, period);\n\t        addSubtract(this, dur, direction);\n\t        return this;\n\t    };\n\t}\n\t\n\tfunction addSubtract (mom, duration, isAdding, updateOffset) {\n\t    var milliseconds = duration._milliseconds,\n\t        days = absRound(duration._days),\n\t        months = absRound(duration._months);\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return;\n\t    }\n\t\n\t    updateOffset = updateOffset == null ? true : updateOffset;\n\t\n\t    if (milliseconds) {\n\t        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n\t    }\n\t    if (days) {\n\t        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n\t    }\n\t    if (months) {\n\t        setMonth(mom, get(mom, 'Month') + months * isAdding);\n\t    }\n\t    if (updateOffset) {\n\t        hooks.updateOffset(mom, days || months);\n\t    }\n\t}\n\t\n\tvar add      = createAdder(1, 'add');\n\tvar subtract = createAdder(-1, 'subtract');\n\t\n\tfunction getCalendarFormat(myMoment, now) {\n\t    var diff = myMoment.diff(now, 'days', true);\n\t    return diff < -6 ? 'sameElse' :\n\t            diff < -1 ? 'lastWeek' :\n\t            diff < 0 ? 'lastDay' :\n\t            diff < 1 ? 'sameDay' :\n\t            diff < 2 ? 'nextDay' :\n\t            diff < 7 ? 'nextWeek' : 'sameElse';\n\t}\n\t\n\tfunction calendar$1 (time, formats) {\n\t    // We want to compare the start of today, vs this.\n\t    // Getting start-of-today depends on whether we're local/utc/offset or not.\n\t    var now = time || createLocal(),\n\t        sod = cloneWithOffset(now, this).startOf('day'),\n\t        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\t\n\t    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\t\n\t    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n\t}\n\t\n\tfunction clone () {\n\t    return new Moment(this);\n\t}\n\t\n\tfunction isAfter (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() > localInput.valueOf();\n\t    } else {\n\t        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isBefore (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() < localInput.valueOf();\n\t    } else {\n\t        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n\t    }\n\t}\n\t\n\tfunction isBetween (from, to, units, inclusivity) {\n\t    inclusivity = inclusivity || '()';\n\t    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n\t        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n\t}\n\t\n\tfunction isSame (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input),\n\t        inputMs;\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(units || 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() === localInput.valueOf();\n\t    } else {\n\t        inputMs = localInput.valueOf();\n\t        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isSameOrAfter (input, units) {\n\t    return this.isSame(input, units) || this.isAfter(input,units);\n\t}\n\t\n\tfunction isSameOrBefore (input, units) {\n\t    return this.isSame(input, units) || this.isBefore(input,units);\n\t}\n\t\n\tfunction diff (input, units, asFloat) {\n\t    var that,\n\t        zoneDelta,\n\t        delta, output;\n\t\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    that = cloneWithOffset(input, this);\n\t\n\t    if (!that.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'year' || units === 'month' || units === 'quarter') {\n\t        output = monthDiff(this, that);\n\t        if (units === 'quarter') {\n\t            output = output / 3;\n\t        } else if (units === 'year') {\n\t            output = output / 12;\n\t        }\n\t    } else {\n\t        delta = this - that;\n\t        output = units === 'second' ? delta / 1e3 : // 1000\n\t            units === 'minute' ? delta / 6e4 : // 1000 * 60\n\t            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n\t            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n\t            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\t            delta;\n\t    }\n\t    return asFloat ? output : absFloor(output);\n\t}\n\t\n\tfunction monthDiff (a, b) {\n\t    // difference in months\n\t    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n\t        // b is in (anchor - 1 month, anchor + 1 month)\n\t        anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t        anchor2, adjust;\n\t\n\t    if (b - anchor < 0) {\n\t        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor - anchor2);\n\t    } else {\n\t        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor2 - anchor);\n\t    }\n\t\n\t    //check for negative zero, return zero if negative zero\n\t    return -(wholeMonthDiff + adjust) || 0;\n\t}\n\t\n\thooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\thooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\t\n\tfunction toString () {\n\t    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t}\n\t\n\tfunction toISOString() {\n\t    if (!this.isValid()) {\n\t        return null;\n\t    }\n\t    var m = this.clone().utc();\n\t    if (m.year() < 0 || m.year() > 9999) {\n\t        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t    }\n\t    if (isFunction(Date.prototype.toISOString)) {\n\t        // native implementation is ~50x faster, use it when we can\n\t        return this.toDate().toISOString();\n\t    }\n\t    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t}\n\t\n\t/**\n\t * Return a human readable representation of a moment that can\n\t * also be evaluated to get a new moment which is the same\n\t *\n\t * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n\t */\n\tfunction inspect () {\n\t    if (!this.isValid()) {\n\t        return 'moment.invalid(/* ' + this._i + ' */)';\n\t    }\n\t    var func = 'moment';\n\t    var zone = '';\n\t    if (!this.isLocal()) {\n\t        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n\t        zone = 'Z';\n\t    }\n\t    var prefix = '[' + func + '(\"]';\n\t    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n\t    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n\t    var suffix = zone + '[\")]';\n\t\n\t    return this.format(prefix + year + datetime + suffix);\n\t}\n\t\n\tfunction format (inputString) {\n\t    if (!inputString) {\n\t        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n\t    }\n\t    var output = formatMoment(this, inputString);\n\t    return this.localeData().postformat(output);\n\t}\n\t\n\tfunction from (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction fromNow (withoutSuffix) {\n\t    return this.from(createLocal(), withoutSuffix);\n\t}\n\t\n\tfunction to (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction toNow (withoutSuffix) {\n\t    return this.to(createLocal(), withoutSuffix);\n\t}\n\t\n\t// If passed a locale key, it will set the locale for this\n\t// instance.  Otherwise, it will return the locale configuration\n\t// variables for this instance.\n\tfunction locale (key) {\n\t    var newLocaleData;\n\t\n\t    if (key === undefined) {\n\t        return this._locale._abbr;\n\t    } else {\n\t        newLocaleData = getLocale(key);\n\t        if (newLocaleData != null) {\n\t            this._locale = newLocaleData;\n\t        }\n\t        return this;\n\t    }\n\t}\n\t\n\tvar lang = deprecate(\n\t    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n\t    function (key) {\n\t        if (key === undefined) {\n\t            return this.localeData();\n\t        } else {\n\t            return this.locale(key);\n\t        }\n\t    }\n\t);\n\t\n\tfunction localeData () {\n\t    return this._locale;\n\t}\n\t\n\tfunction startOf (units) {\n\t    units = normalizeUnits(units);\n\t    // the following switch intentionally omits break keywords\n\t    // to utilize falling through the cases.\n\t    switch (units) {\n\t        case 'year':\n\t            this.month(0);\n\t            /* falls through */\n\t        case 'quarter':\n\t        case 'month':\n\t            this.date(1);\n\t            /* falls through */\n\t        case 'week':\n\t        case 'isoWeek':\n\t        case 'day':\n\t        case 'date':\n\t            this.hours(0);\n\t            /* falls through */\n\t        case 'hour':\n\t            this.minutes(0);\n\t            /* falls through */\n\t        case 'minute':\n\t            this.seconds(0);\n\t            /* falls through */\n\t        case 'second':\n\t            this.milliseconds(0);\n\t    }\n\t\n\t    // weeks are a special case\n\t    if (units === 'week') {\n\t        this.weekday(0);\n\t    }\n\t    if (units === 'isoWeek') {\n\t        this.isoWeekday(1);\n\t    }\n\t\n\t    // quarters are also special\n\t    if (units === 'quarter') {\n\t        this.month(Math.floor(this.month() / 3) * 3);\n\t    }\n\t\n\t    return this;\n\t}\n\t\n\tfunction endOf (units) {\n\t    units = normalizeUnits(units);\n\t    if (units === undefined || units === 'millisecond') {\n\t        return this;\n\t    }\n\t\n\t    // 'date' is an alias for 'day', so it should be considered as such.\n\t    if (units === 'date') {\n\t        units = 'day';\n\t    }\n\t\n\t    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n\t}\n\t\n\tfunction valueOf () {\n\t    return this._d.valueOf() - ((this._offset || 0) * 60000);\n\t}\n\t\n\tfunction unix () {\n\t    return Math.floor(this.valueOf() / 1000);\n\t}\n\t\n\tfunction toDate () {\n\t    return new Date(this.valueOf());\n\t}\n\t\n\tfunction toArray () {\n\t    var m = this;\n\t    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n\t}\n\t\n\tfunction toObject () {\n\t    var m = this;\n\t    return {\n\t        years: m.year(),\n\t        months: m.month(),\n\t        date: m.date(),\n\t        hours: m.hours(),\n\t        minutes: m.minutes(),\n\t        seconds: m.seconds(),\n\t        milliseconds: m.milliseconds()\n\t    };\n\t}\n\t\n\tfunction toJSON () {\n\t    // new Date(NaN).toJSON() === null\n\t    return this.isValid() ? this.toISOString() : null;\n\t}\n\t\n\tfunction isValid$2 () {\n\t    return isValid(this);\n\t}\n\t\n\tfunction parsingFlags () {\n\t    return extend({}, getParsingFlags(this));\n\t}\n\t\n\tfunction invalidAt () {\n\t    return getParsingFlags(this).overflow;\n\t}\n\t\n\tfunction creationData() {\n\t    return {\n\t        input: this._i,\n\t        format: this._f,\n\t        locale: this._locale,\n\t        isUTC: this._isUTC,\n\t        strict: this._strict\n\t    };\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken(0, ['gg', 2], 0, function () {\n\t    return this.weekYear() % 100;\n\t});\n\t\n\taddFormatToken(0, ['GG', 2], 0, function () {\n\t    return this.isoWeekYear() % 100;\n\t});\n\t\n\tfunction addWeekYearFormatToken (token, getter) {\n\t    addFormatToken(0, [token, token.length], 0, getter);\n\t}\n\t\n\taddWeekYearFormatToken('gggg',     'weekYear');\n\taddWeekYearFormatToken('ggggg',    'weekYear');\n\taddWeekYearFormatToken('GGGG',  'isoWeekYear');\n\taddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('weekYear', 'gg');\n\taddUnitAlias('isoWeekYear', 'GG');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('weekYear', 1);\n\taddUnitPriority('isoWeekYear', 1);\n\t\n\t\n\t// PARSING\n\t\n\taddRegexToken('G',      matchSigned);\n\taddRegexToken('g',      matchSigned);\n\taddRegexToken('GG',     match1to2, match2);\n\taddRegexToken('gg',     match1to2, match2);\n\taddRegexToken('GGGG',   match1to4, match4);\n\taddRegexToken('gggg',   match1to4, match4);\n\taddRegexToken('GGGGG',  match1to6, match6);\n\taddRegexToken('ggggg',  match1to6, match6);\n\t\n\taddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n\t    week[token.substr(0, 2)] = toInt(input);\n\t});\n\t\n\taddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n\t    week[token] = hooks.parseTwoDigitYear(input);\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input,\n\t            this.week(),\n\t            this.weekday(),\n\t            this.localeData()._week.dow,\n\t            this.localeData()._week.doy);\n\t}\n\t\n\tfunction getSetISOWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n\t}\n\t\n\tfunction getISOWeeksInYear () {\n\t    return weeksInYear(this.year(), 1, 4);\n\t}\n\t\n\tfunction getWeeksInYear () {\n\t    var weekInfo = this.localeData()._week;\n\t    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t}\n\t\n\tfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n\t    var weeksTarget;\n\t    if (input == null) {\n\t        return weekOfYear(this, dow, doy).year;\n\t    } else {\n\t        weeksTarget = weeksInYear(input, dow, doy);\n\t        if (week > weeksTarget) {\n\t            week = weeksTarget;\n\t        }\n\t        return setWeekAll.call(this, input, week, weekday, dow, doy);\n\t    }\n\t}\n\t\n\tfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n\t    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n\t        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\t\n\t    this.year(date.getUTCFullYear());\n\t    this.month(date.getUTCMonth());\n\t    this.date(date.getUTCDate());\n\t    return this;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Q', 0, 'Qo', 'quarter');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('quarter', 'Q');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('quarter', 7);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Q', match1);\n\taddParseToken('Q', function (input, array) {\n\t    array[MONTH] = (toInt(input) - 1) * 3;\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetQuarter (input) {\n\t    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('D', ['DD', 2], 'Do', 'date');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('date', 'D');\n\t\n\t// PRIOROITY\n\taddUnitPriority('date', 9);\n\t\n\t// PARSING\n\t\n\taddRegexToken('D',  match1to2);\n\taddRegexToken('DD', match1to2, match2);\n\taddRegexToken('Do', function (isStrict, locale) {\n\t    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t    return isStrict ?\n\t      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n\t      locale._dayOfMonthOrdinalParseLenient;\n\t});\n\t\n\taddParseToken(['D', 'DD'], DATE);\n\taddParseToken('Do', function (input, array) {\n\t    array[DATE] = toInt(input.match(match1to2)[0], 10);\n\t});\n\t\n\t// MOMENTS\n\t\n\tvar getSetDayOfMonth = makeGetSet('Date', true);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('dayOfYear', 'DDD');\n\t\n\t// PRIORITY\n\taddUnitPriority('dayOfYear', 4);\n\t\n\t// PARSING\n\t\n\taddRegexToken('DDD',  match1to3);\n\taddRegexToken('DDDD', match3);\n\taddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n\t    config._dayOfYear = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfYear (input) {\n\t    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n\t    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('m', ['mm', 2], 0, 'minute');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('minute', 'm');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('minute', 14);\n\t\n\t// PARSING\n\t\n\taddRegexToken('m',  match1to2);\n\taddRegexToken('mm', match1to2, match2);\n\taddParseToken(['m', 'mm'], MINUTE);\n\t\n\t// MOMENTS\n\t\n\tvar getSetMinute = makeGetSet('Minutes', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('s', ['ss', 2], 0, 'second');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('second', 's');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('second', 15);\n\t\n\t// PARSING\n\t\n\taddRegexToken('s',  match1to2);\n\taddRegexToken('ss', match1to2, match2);\n\taddParseToken(['s', 'ss'], SECOND);\n\t\n\t// MOMENTS\n\t\n\tvar getSetSecond = makeGetSet('Seconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('S', 0, 0, function () {\n\t    return ~~(this.millisecond() / 100);\n\t});\n\t\n\taddFormatToken(0, ['SS', 2], 0, function () {\n\t    return ~~(this.millisecond() / 10);\n\t});\n\t\n\taddFormatToken(0, ['SSS', 3], 0, 'millisecond');\n\taddFormatToken(0, ['SSSS', 4], 0, function () {\n\t    return this.millisecond() * 10;\n\t});\n\taddFormatToken(0, ['SSSSS', 5], 0, function () {\n\t    return this.millisecond() * 100;\n\t});\n\taddFormatToken(0, ['SSSSSS', 6], 0, function () {\n\t    return this.millisecond() * 1000;\n\t});\n\taddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n\t    return this.millisecond() * 10000;\n\t});\n\taddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n\t    return this.millisecond() * 100000;\n\t});\n\taddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n\t    return this.millisecond() * 1000000;\n\t});\n\t\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('millisecond', 'ms');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('millisecond', 16);\n\t\n\t// PARSING\n\t\n\taddRegexToken('S',    match1to3, match1);\n\taddRegexToken('SS',   match1to3, match2);\n\taddRegexToken('SSS',  match1to3, match3);\n\t\n\tvar token;\n\tfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n\t    addRegexToken(token, matchUnsigned);\n\t}\n\t\n\tfunction parseMs(input, array) {\n\t    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t}\n\t\n\tfor (token = 'S'; token.length <= 9; token += 'S') {\n\t    addParseToken(token, parseMs);\n\t}\n\t// MOMENTS\n\t\n\tvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('z',  0, 0, 'zoneAbbr');\n\taddFormatToken('zz', 0, 0, 'zoneName');\n\t\n\t// MOMENTS\n\t\n\tfunction getZoneAbbr () {\n\t    return this._isUTC ? 'UTC' : '';\n\t}\n\t\n\tfunction getZoneName () {\n\t    return this._isUTC ? 'Coordinated Universal Time' : '';\n\t}\n\t\n\tvar proto = Moment.prototype;\n\t\n\tproto.add               = add;\n\tproto.calendar          = calendar$1;\n\tproto.clone             = clone;\n\tproto.diff              = diff;\n\tproto.endOf             = endOf;\n\tproto.format            = format;\n\tproto.from              = from;\n\tproto.fromNow           = fromNow;\n\tproto.to                = to;\n\tproto.toNow             = toNow;\n\tproto.get               = stringGet;\n\tproto.invalidAt         = invalidAt;\n\tproto.isAfter           = isAfter;\n\tproto.isBefore          = isBefore;\n\tproto.isBetween         = isBetween;\n\tproto.isSame            = isSame;\n\tproto.isSameOrAfter     = isSameOrAfter;\n\tproto.isSameOrBefore    = isSameOrBefore;\n\tproto.isValid           = isValid$2;\n\tproto.lang              = lang;\n\tproto.locale            = locale;\n\tproto.localeData        = localeData;\n\tproto.max               = prototypeMax;\n\tproto.min               = prototypeMin;\n\tproto.parsingFlags      = parsingFlags;\n\tproto.set               = stringSet;\n\tproto.startOf           = startOf;\n\tproto.subtract          = subtract;\n\tproto.toArray           = toArray;\n\tproto.toObject          = toObject;\n\tproto.toDate            = toDate;\n\tproto.toISOString       = toISOString;\n\tproto.inspect           = inspect;\n\tproto.toJSON            = toJSON;\n\tproto.toString          = toString;\n\tproto.unix              = unix;\n\tproto.valueOf           = valueOf;\n\tproto.creationData      = creationData;\n\t\n\t// Year\n\tproto.year       = getSetYear;\n\tproto.isLeapYear = getIsLeapYear;\n\t\n\t// Week Year\n\tproto.weekYear    = getSetWeekYear;\n\tproto.isoWeekYear = getSetISOWeekYear;\n\t\n\t// Quarter\n\tproto.quarter = proto.quarters = getSetQuarter;\n\t\n\t// Month\n\tproto.month       = getSetMonth;\n\tproto.daysInMonth = getDaysInMonth;\n\t\n\t// Week\n\tproto.week           = proto.weeks        = getSetWeek;\n\tproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n\tproto.weeksInYear    = getWeeksInYear;\n\tproto.isoWeeksInYear = getISOWeeksInYear;\n\t\n\t// Day\n\tproto.date       = getSetDayOfMonth;\n\tproto.day        = proto.days             = getSetDayOfWeek;\n\tproto.weekday    = getSetLocaleDayOfWeek;\n\tproto.isoWeekday = getSetISODayOfWeek;\n\tproto.dayOfYear  = getSetDayOfYear;\n\t\n\t// Hour\n\tproto.hour = proto.hours = getSetHour;\n\t\n\t// Minute\n\tproto.minute = proto.minutes = getSetMinute;\n\t\n\t// Second\n\tproto.second = proto.seconds = getSetSecond;\n\t\n\t// Millisecond\n\tproto.millisecond = proto.milliseconds = getSetMillisecond;\n\t\n\t// Offset\n\tproto.utcOffset            = getSetOffset;\n\tproto.utc                  = setOffsetToUTC;\n\tproto.local                = setOffsetToLocal;\n\tproto.parseZone            = setOffsetToParsedOffset;\n\tproto.hasAlignedHourOffset = hasAlignedHourOffset;\n\tproto.isDST                = isDaylightSavingTime;\n\tproto.isLocal              = isLocal;\n\tproto.isUtcOffset          = isUtcOffset;\n\tproto.isUtc                = isUtc;\n\tproto.isUTC                = isUtc;\n\t\n\t// Timezone\n\tproto.zoneAbbr = getZoneAbbr;\n\tproto.zoneName = getZoneName;\n\t\n\t// Deprecations\n\tproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n\tproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n\tproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n\tproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n\tproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\t\n\tfunction createUnix (input) {\n\t    return createLocal(input * 1000);\n\t}\n\t\n\tfunction createInZone () {\n\t    return createLocal.apply(null, arguments).parseZone();\n\t}\n\t\n\tfunction preParsePostFormat (string) {\n\t    return string;\n\t}\n\t\n\tvar proto$1 = Locale.prototype;\n\t\n\tproto$1.calendar        = calendar;\n\tproto$1.longDateFormat  = longDateFormat;\n\tproto$1.invalidDate     = invalidDate;\n\tproto$1.ordinal         = ordinal;\n\tproto$1.preparse        = preParsePostFormat;\n\tproto$1.postformat      = preParsePostFormat;\n\tproto$1.relativeTime    = relativeTime;\n\tproto$1.pastFuture      = pastFuture;\n\tproto$1.set             = set;\n\t\n\t// Month\n\tproto$1.months            =        localeMonths;\n\tproto$1.monthsShort       =        localeMonthsShort;\n\tproto$1.monthsParse       =        localeMonthsParse;\n\tproto$1.monthsRegex       = monthsRegex;\n\tproto$1.monthsShortRegex  = monthsShortRegex;\n\t\n\t// Week\n\tproto$1.week = localeWeek;\n\tproto$1.firstDayOfYear = localeFirstDayOfYear;\n\tproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\t\n\t// Day of Week\n\tproto$1.weekdays       =        localeWeekdays;\n\tproto$1.weekdaysMin    =        localeWeekdaysMin;\n\tproto$1.weekdaysShort  =        localeWeekdaysShort;\n\tproto$1.weekdaysParse  =        localeWeekdaysParse;\n\t\n\tproto$1.weekdaysRegex       =        weekdaysRegex;\n\tproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n\tproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\t\n\t// Hours\n\tproto$1.isPM = localeIsPM;\n\tproto$1.meridiem = localeMeridiem;\n\t\n\tfunction get$1 (format, index, field, setter) {\n\t    var locale = getLocale();\n\t    var utc = createUTC().set(setter, index);\n\t    return locale[field](utc, format);\n\t}\n\t\n\tfunction listMonthsImpl (format, index, field) {\n\t    if (isNumber(format)) {\n\t        index = format;\n\t        format = undefined;\n\t    }\n\t\n\t    format = format || '';\n\t\n\t    if (index != null) {\n\t        return get$1(format, index, field, 'month');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 12; i++) {\n\t        out[i] = get$1(format, i, field, 'month');\n\t    }\n\t    return out;\n\t}\n\t\n\t// ()\n\t// (5)\n\t// (fmt, 5)\n\t// (fmt)\n\t// (true)\n\t// (true, 5)\n\t// (true, fmt, 5)\n\t// (true, fmt)\n\tfunction listWeekdaysImpl (localeSorted, format, index, field) {\n\t    if (typeof localeSorted === 'boolean') {\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    } else {\n\t        format = localeSorted;\n\t        index = format;\n\t        localeSorted = false;\n\t\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    }\n\t\n\t    var locale = getLocale(),\n\t        shift = localeSorted ? locale._week.dow : 0;\n\t\n\t    if (index != null) {\n\t        return get$1(format, (index + shift) % 7, field, 'day');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 7; i++) {\n\t        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n\t    }\n\t    return out;\n\t}\n\t\n\tfunction listMonths (format, index) {\n\t    return listMonthsImpl(format, index, 'months');\n\t}\n\t\n\tfunction listMonthsShort (format, index) {\n\t    return listMonthsImpl(format, index, 'monthsShort');\n\t}\n\t\n\tfunction listWeekdays (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n\t}\n\t\n\tfunction listWeekdaysShort (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n\t}\n\t\n\tfunction listWeekdaysMin (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n\t}\n\t\n\tgetSetGlobalLocale('en', {\n\t    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t    ordinal : function (number) {\n\t        var b = number % 10,\n\t            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n\t            (b === 1) ? 'st' :\n\t            (b === 2) ? 'nd' :\n\t            (b === 3) ? 'rd' : 'th';\n\t        return number + output;\n\t    }\n\t});\n\t\n\t// Side effect imports\n\thooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n\thooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\t\n\tvar mathAbs = Math.abs;\n\t\n\tfunction abs () {\n\t    var data           = this._data;\n\t\n\t    this._milliseconds = mathAbs(this._milliseconds);\n\t    this._days         = mathAbs(this._days);\n\t    this._months       = mathAbs(this._months);\n\t\n\t    data.milliseconds  = mathAbs(data.milliseconds);\n\t    data.seconds       = mathAbs(data.seconds);\n\t    data.minutes       = mathAbs(data.minutes);\n\t    data.hours         = mathAbs(data.hours);\n\t    data.months        = mathAbs(data.months);\n\t    data.years         = mathAbs(data.years);\n\t\n\t    return this;\n\t}\n\t\n\tfunction addSubtract$1 (duration, input, value, direction) {\n\t    var other = createDuration(input, value);\n\t\n\t    duration._milliseconds += direction * other._milliseconds;\n\t    duration._days         += direction * other._days;\n\t    duration._months       += direction * other._months;\n\t\n\t    return duration._bubble();\n\t}\n\t\n\t// supports only 2.0-style add(1, 's') or add(duration)\n\tfunction add$1 (input, value) {\n\t    return addSubtract$1(this, input, value, 1);\n\t}\n\t\n\t// supports only 2.0-style subtract(1, 's') or subtract(duration)\n\tfunction subtract$1 (input, value) {\n\t    return addSubtract$1(this, input, value, -1);\n\t}\n\t\n\tfunction absCeil (number) {\n\t    if (number < 0) {\n\t        return Math.floor(number);\n\t    } else {\n\t        return Math.ceil(number);\n\t    }\n\t}\n\t\n\tfunction bubble () {\n\t    var milliseconds = this._milliseconds;\n\t    var days         = this._days;\n\t    var months       = this._months;\n\t    var data         = this._data;\n\t    var seconds, minutes, hours, years, monthsFromDays;\n\t\n\t    // if we have a mix of positive and negative values, bubble down first\n\t    // check: https://github.com/moment/moment/issues/2166\n\t    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n\t            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n\t        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n\t        days = 0;\n\t        months = 0;\n\t    }\n\t\n\t    // The following code bubbles up values, see the tests for\n\t    // examples of what that means.\n\t    data.milliseconds = milliseconds % 1000;\n\t\n\t    seconds           = absFloor(milliseconds / 1000);\n\t    data.seconds      = seconds % 60;\n\t\n\t    minutes           = absFloor(seconds / 60);\n\t    data.minutes      = minutes % 60;\n\t\n\t    hours             = absFloor(minutes / 60);\n\t    data.hours        = hours % 24;\n\t\n\t    days += absFloor(hours / 24);\n\t\n\t    // convert days to months\n\t    monthsFromDays = absFloor(daysToMonths(days));\n\t    months += monthsFromDays;\n\t    days -= absCeil(monthsToDays(monthsFromDays));\n\t\n\t    // 12 months -> 1 year\n\t    years = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t    data.days   = days;\n\t    data.months = months;\n\t    data.years  = years;\n\t\n\t    return this;\n\t}\n\t\n\tfunction daysToMonths (days) {\n\t    // 400 years have 146097 days (taking into account leap year rules)\n\t    // 400 years have 12 months === 4800\n\t    return days * 4800 / 146097;\n\t}\n\t\n\tfunction monthsToDays (months) {\n\t    // the reverse of daysToMonths\n\t    return months * 146097 / 4800;\n\t}\n\t\n\tfunction as (units) {\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t    var days;\n\t    var months;\n\t    var milliseconds = this._milliseconds;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'month' || units === 'year') {\n\t        days   = this._days   + milliseconds / 864e5;\n\t        months = this._months + daysToMonths(days);\n\t        return units === 'month' ? months : months / 12;\n\t    } else {\n\t        // handle milliseconds separately because of floating point math errors (issue #1867)\n\t        days = this._days + Math.round(monthsToDays(this._months));\n\t        switch (units) {\n\t            case 'week'   : return days / 7     + milliseconds / 6048e5;\n\t            case 'day'    : return days         + milliseconds / 864e5;\n\t            case 'hour'   : return days * 24    + milliseconds / 36e5;\n\t            case 'minute' : return days * 1440  + milliseconds / 6e4;\n\t            case 'second' : return days * 86400 + milliseconds / 1000;\n\t            // Math.floor prevents floating point math errors here\n\t            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n\t            default: throw new Error('Unknown unit ' + units);\n\t        }\n\t    }\n\t}\n\t\n\t// TODO: Use this.as('ms')?\n\tfunction valueOf$1 () {\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t    return (\n\t        this._milliseconds +\n\t        this._days * 864e5 +\n\t        (this._months % 12) * 2592e6 +\n\t        toInt(this._months / 12) * 31536e6\n\t    );\n\t}\n\t\n\tfunction makeAs (alias) {\n\t    return function () {\n\t        return this.as(alias);\n\t    };\n\t}\n\t\n\tvar asMilliseconds = makeAs('ms');\n\tvar asSeconds      = makeAs('s');\n\tvar asMinutes      = makeAs('m');\n\tvar asHours        = makeAs('h');\n\tvar asDays         = makeAs('d');\n\tvar asWeeks        = makeAs('w');\n\tvar asMonths       = makeAs('M');\n\tvar asYears        = makeAs('y');\n\t\n\tfunction get$2 (units) {\n\t    units = normalizeUnits(units);\n\t    return this.isValid() ? this[units + 's']() : NaN;\n\t}\n\t\n\tfunction makeGetter(name) {\n\t    return function () {\n\t        return this.isValid() ? this._data[name] : NaN;\n\t    };\n\t}\n\t\n\tvar milliseconds = makeGetter('milliseconds');\n\tvar seconds      = makeGetter('seconds');\n\tvar minutes      = makeGetter('minutes');\n\tvar hours        = makeGetter('hours');\n\tvar days         = makeGetter('days');\n\tvar months       = makeGetter('months');\n\tvar years        = makeGetter('years');\n\t\n\tfunction weeks () {\n\t    return absFloor(this.days() / 7);\n\t}\n\t\n\tvar round = Math.round;\n\tvar thresholds = {\n\t    ss: 44,         // a few seconds to seconds\n\t    s : 45,         // seconds to minute\n\t    m : 45,         // minutes to hour\n\t    h : 22,         // hours to day\n\t    d : 26,         // days to month\n\t    M : 11          // months to year\n\t};\n\t\n\t// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\tfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t}\n\t\n\tfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n\t    var duration = createDuration(posNegDuration).abs();\n\t    var seconds  = round(duration.as('s'));\n\t    var minutes  = round(duration.as('m'));\n\t    var hours    = round(duration.as('h'));\n\t    var days     = round(duration.as('d'));\n\t    var months   = round(duration.as('M'));\n\t    var years    = round(duration.as('y'));\n\t\n\t    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n\t            seconds < thresholds.s   && ['ss', seconds] ||\n\t            minutes <= 1             && ['m']           ||\n\t            minutes < thresholds.m   && ['mm', minutes] ||\n\t            hours   <= 1             && ['h']           ||\n\t            hours   < thresholds.h   && ['hh', hours]   ||\n\t            days    <= 1             && ['d']           ||\n\t            days    < thresholds.d   && ['dd', days]    ||\n\t            months  <= 1             && ['M']           ||\n\t            months  < thresholds.M   && ['MM', months]  ||\n\t            years   <= 1             && ['y']           || ['yy', years];\n\t\n\t    a[2] = withoutSuffix;\n\t    a[3] = +posNegDuration > 0;\n\t    a[4] = locale;\n\t    return substituteTimeAgo.apply(null, a);\n\t}\n\t\n\t// This function allows you to set the rounding function for relative time strings\n\tfunction getSetRelativeTimeRounding (roundingFunction) {\n\t    if (roundingFunction === undefined) {\n\t        return round;\n\t    }\n\t    if (typeof(roundingFunction) === 'function') {\n\t        round = roundingFunction;\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t// This function allows you to set a threshold for relative time strings\n\tfunction getSetRelativeTimeThreshold (threshold, limit) {\n\t    if (thresholds[threshold] === undefined) {\n\t        return false;\n\t    }\n\t    if (limit === undefined) {\n\t        return thresholds[threshold];\n\t    }\n\t    thresholds[threshold] = limit;\n\t    if (threshold === 's') {\n\t        thresholds.ss = limit - 1;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction humanize (withSuffix) {\n\t    if (!this.isValid()) {\n\t        return this.localeData().invalidDate();\n\t    }\n\t\n\t    var locale = this.localeData();\n\t    var output = relativeTime$1(this, !withSuffix, locale);\n\t\n\t    if (withSuffix) {\n\t        output = locale.pastFuture(+this, output);\n\t    }\n\t\n\t    return locale.postformat(output);\n\t}\n\t\n\tvar abs$1 = Math.abs;\n\t\n\tfunction toISOString$1() {\n\t    // for ISO strings we do not use the normal bubbling rules:\n\t    //  * milliseconds bubble up until they become hours\n\t    //  * days do not bubble at all\n\t    //  * months bubble up until they become years\n\t    // This is because there is no context-free conversion between hours and days\n\t    // (think of clock changes)\n\t    // and also not between days and months (28-31 days per month)\n\t    if (!this.isValid()) {\n\t        return this.localeData().invalidDate();\n\t    }\n\t\n\t    var seconds = abs$1(this._milliseconds) / 1000;\n\t    var days         = abs$1(this._days);\n\t    var months       = abs$1(this._months);\n\t    var minutes, hours, years;\n\t\n\t    // 3600 seconds -> 60 minutes -> 1 hour\n\t    minutes           = absFloor(seconds / 60);\n\t    hours             = absFloor(minutes / 60);\n\t    seconds %= 60;\n\t    minutes %= 60;\n\t\n\t    // 12 months -> 1 year\n\t    years  = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t\n\t    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t    var Y = years;\n\t    var M = months;\n\t    var D = days;\n\t    var h = hours;\n\t    var m = minutes;\n\t    var s = seconds;\n\t    var total = this.asSeconds();\n\t\n\t    if (!total) {\n\t        // this is the same as C#'s (Noda) and python (isodate)...\n\t        // but not other JS (goog.date)\n\t        return 'P0D';\n\t    }\n\t\n\t    return (total < 0 ? '-' : '') +\n\t        'P' +\n\t        (Y ? Y + 'Y' : '') +\n\t        (M ? M + 'M' : '') +\n\t        (D ? D + 'D' : '') +\n\t        ((h || m || s) ? 'T' : '') +\n\t        (h ? h + 'H' : '') +\n\t        (m ? m + 'M' : '') +\n\t        (s ? s + 'S' : '');\n\t}\n\t\n\tvar proto$2 = Duration.prototype;\n\t\n\tproto$2.isValid        = isValid$1;\n\tproto$2.abs            = abs;\n\tproto$2.add            = add$1;\n\tproto$2.subtract       = subtract$1;\n\tproto$2.as             = as;\n\tproto$2.asMilliseconds = asMilliseconds;\n\tproto$2.asSeconds      = asSeconds;\n\tproto$2.asMinutes      = asMinutes;\n\tproto$2.asHours        = asHours;\n\tproto$2.asDays         = asDays;\n\tproto$2.asWeeks        = asWeeks;\n\tproto$2.asMonths       = asMonths;\n\tproto$2.asYears        = asYears;\n\tproto$2.valueOf        = valueOf$1;\n\tproto$2._bubble        = bubble;\n\tproto$2.get            = get$2;\n\tproto$2.milliseconds   = milliseconds;\n\tproto$2.seconds        = seconds;\n\tproto$2.minutes        = minutes;\n\tproto$2.hours          = hours;\n\tproto$2.days           = days;\n\tproto$2.weeks          = weeks;\n\tproto$2.months         = months;\n\tproto$2.years          = years;\n\tproto$2.humanize       = humanize;\n\tproto$2.toISOString    = toISOString$1;\n\tproto$2.toString       = toISOString$1;\n\tproto$2.toJSON         = toISOString$1;\n\tproto$2.locale         = locale;\n\tproto$2.localeData     = localeData;\n\t\n\t// Deprecations\n\tproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n\tproto$2.lang = lang;\n\t\n\t// Side effect imports\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('X', 0, 0, 'unix');\n\taddFormatToken('x', 0, 0, 'valueOf');\n\t\n\t// PARSING\n\t\n\taddRegexToken('x', matchSigned);\n\taddRegexToken('X', matchTimestamp);\n\taddParseToken('X', function (input, array, config) {\n\t    config._d = new Date(parseFloat(input, 10) * 1000);\n\t});\n\taddParseToken('x', function (input, array, config) {\n\t    config._d = new Date(toInt(input));\n\t});\n\t\n\t// Side effect imports\n\t\n\t\n\thooks.version = '2.18.1';\n\t\n\tsetHookCallback(createLocal);\n\t\n\thooks.fn                    = proto;\n\thooks.min                   = min;\n\thooks.max                   = max;\n\thooks.now                   = now;\n\thooks.utc                   = createUTC;\n\thooks.unix                  = createUnix;\n\thooks.months                = listMonths;\n\thooks.isDate                = isDate;\n\thooks.locale                = getSetGlobalLocale;\n\thooks.invalid               = createInvalid;\n\thooks.duration              = createDuration;\n\thooks.isMoment              = isMoment;\n\thooks.weekdays              = listWeekdays;\n\thooks.parseZone             = createInZone;\n\thooks.localeData            = getLocale;\n\thooks.isDuration            = isDuration;\n\thooks.monthsShort           = listMonthsShort;\n\thooks.weekdaysMin           = listWeekdaysMin;\n\thooks.defineLocale          = defineLocale;\n\thooks.updateLocale          = updateLocale;\n\thooks.locales               = listLocales;\n\thooks.weekdaysShort         = listWeekdaysShort;\n\thooks.normalizeUnits        = normalizeUnits;\n\thooks.relativeTimeRounding = getSetRelativeTimeRounding;\n\thooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n\thooks.calendarFormat        = getCalendarFormat;\n\thooks.prototype             = proto;\n\t\n\treturn hooks;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)(module)))\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t//! moment.js locale configuration\n\t//! locale : Chinese (Taiwan) [zh-tw]\n\t//! author : Ben : https://github.com/ben-lin\n\t//! author : Chris Lam : https://github.com/hehachris\n\t\n\t;(function (global, factory) {\n\t    true ? factory(__webpack_require__(2)) :\n\t   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n\t   factory(global.moment)\n\t}(this, (function (moment) { 'use strict';\n\t\n\t\n\tvar zhTw = moment.defineLocale('zh-tw', {\n\t    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n\t    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n\t    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n\t    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n\t    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n\t    longDateFormat : {\n\t        LT : 'HH:mm',\n\t        LTS : 'HH:mm:ss',\n\t        L : 'YYYY年MMMD日',\n\t        LL : 'YYYY年MMMD日',\n\t        LLL : 'YYYY年MMMD日 HH:mm',\n\t        LLLL : 'YYYY年MMMD日dddd HH:mm',\n\t        l : 'YYYY年MMMD日',\n\t        ll : 'YYYY年MMMD日',\n\t        lll : 'YYYY年MMMD日 HH:mm',\n\t        llll : 'YYYY年MMMD日dddd HH:mm'\n\t    },\n\t    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n\t    meridiemHour : function (hour, meridiem) {\n\t        if (hour === 12) {\n\t            hour = 0;\n\t        }\n\t        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n\t            return hour;\n\t        } else if (meridiem === '中午') {\n\t            return hour >= 11 ? hour : hour + 12;\n\t        } else if (meridiem === '下午' || meridiem === '晚上') {\n\t            return hour + 12;\n\t        }\n\t    },\n\t    meridiem : function (hour, minute, isLower) {\n\t        var hm = hour * 100 + minute;\n\t        if (hm < 600) {\n\t            return '凌晨';\n\t        } else if (hm < 900) {\n\t            return '早上';\n\t        } else if (hm < 1130) {\n\t            return '上午';\n\t        } else if (hm < 1230) {\n\t            return '中午';\n\t        } else if (hm < 1800) {\n\t            return '下午';\n\t        } else {\n\t            return '晚上';\n\t        }\n\t    },\n\t    calendar : {\n\t        sameDay : '[今天]LT',\n\t        nextDay : '[明天]LT',\n\t        nextWeek : '[下]ddddLT',\n\t        lastDay : '[昨天]LT',\n\t        lastWeek : '[上]ddddLT',\n\t        sameElse : 'L'\n\t    },\n\t    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n\t    ordinal : function (number, period) {\n\t        switch (period) {\n\t            case 'd' :\n\t            case 'D' :\n\t            case 'DDD' :\n\t                return number + '日';\n\t            case 'M' :\n\t                return number + '月';\n\t            case 'w' :\n\t            case 'W' :\n\t                return number + '週';\n\t            default :\n\t                return number;\n\t        }\n\t    },\n\t    relativeTime : {\n\t        future : '%s內',\n\t        past : '%s前',\n\t        s : '幾秒',\n\t        m : '1 分鐘',\n\t        mm : '%d 分鐘',\n\t        h : '1 小時',\n\t        hh : '%d 小時',\n\t        d : '1 天',\n\t        dd : '%d 天',\n\t        M : '1 個月',\n\t        MM : '%d 個月',\n\t        y : '1 年',\n\t        yy : '%d 年'\n\t    }\n\t});\n\t\n\treturn zhTw;\n\t\n\t})));\n\n\n/***/ }),\n\n/***/ 7:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./zh-tw\": 3,\n\t\t\"./zh-tw.js\": 3\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 7;\n\n\n/***/ }),\n\n/***/ 8:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n\n/***/ 10:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {'use strict';\n\t\n\tvar svgTemplate = '\\\n\t\t<svg width=\"{{width}}\" height=\"{{height}}\" viewBox=\"{{viewBox}}\" xmlns=\"http://www.w3.org/2000/svg\">\\\n\t\t\t{{path}}\\\n\t\t\t<text x=\"{{textOffsetX}}\" y=\"{{textOffsetY}}\"\\\n\t\t\t\tfill=\"{{textColor}}\" text-anchor=\"middle\" \\\n\t\t\t\tstyle=\"font-size:{{textSize}}px; font-weight: 800; \">\\\n\t\t\t\t{{text}}\\\n\t\t\t</text>\\\n\t\t</svg>';\n\t\n\tvar defaultProperty = {\n\t\twidth: 35,\n\t\theight: 35,\n\t\tviewBox: '0 0 40 40',\n\t\tpath: '',\n\t\ttext: {\n\t\t\toffset: {\n\t\t\t\tx: 15,\n\t\t\t\ty: 15\n\t\t\t},\n\t\t\tcolor: \"#FFFFFF\",\n\t\t\tsize: 35,\n\t\t\tvalue: ''\n\t\t},\n\t\tstrokeColor: \"#4F595D\"\n\t};\n\t\n\tvar getHtml = function getHtml(userProperty) {\n\t\tvar property = $.extend(true, {}, defaultProperty, userProperty);\n\t\n\t\tvar svgHtml = svgTemplate.replace(/{{width}}/g, property.width).replace(/{{height}}/g, property.height).replace(/{{viewBox}}/g, property.viewBox).replace(/{{path}}/g, property.path).replace(/{{textOffsetX}}/g, property.text.offset.x).replace(/{{textOffsetY}}/g, property.text.offset.y).replace(/{{textColor}}/g, property.text.color).replace(/{{textSize}}/g, property.text.size).replace(/{{text}}/g, property.text.value);\n\t\n\t\treturn svgHtml;\n\t};\n\t\n\tvar toDataImage = function toDataImage(svgHtml) {\n\t\treturn 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svgHtml);\n\t};\n\t\n\tvar getContrastYIQ = function getContrastYIQ(hexcolor) {\n\t\t//source: https://24ways.org/2010/calculating-color-contrast/\n\t\thexcolor = hexcolor.replace('#', '');\n\t\tvar r = parseInt(hexcolor.substr(0, 2), 16);\n\t\tvar g = parseInt(hexcolor.substr(2, 2), 16);\n\t\tvar b = parseInt(hexcolor.substr(4, 2), 16);\n\t\tvar yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\t\treturn yiq >= 128 ? '#000000' : '#FFFFFF';\n\t};\n\t\n\texports.getCircleUrl = function (color, text) {\n\t\tvar size = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 40;\n\t\n\t\tvar strokeWidth = 2;\n\t\tvar strokeColor = defaultProperty.strokeColor;\n\t\tvar fillColor = color;\n\t\n\t\tvar path = '\\\n\t\t\t<circle r=\"{{size}}\" stroke=\"{{strokeColor}}\" stroke-width=\"{{strokeWidth}}\" fill=\"{{fillColor}}\" />\\\n\t\t';\n\t\tpath = path.replace(/{{size}}/g, size).replace(/{{strokeWidth}}/g, strokeWidth).replace(/{{strokeColor}}/g, strokeColor).replace(/{{fillColor}}/g, fillColor);\n\t\n\t\tvar property = {\n\t\t\tviewBox: \"-55 -55 110 110\",\n\t\t\tpath: path,\n\t\t\ttext: {\n\t\t\t\toffset: { x: 0, y: 13 },\n\t\t\t\tvalue: text,\n\t\t\t\tcolor: getContrastYIQ(color)\n\t\t\t}\n\t\t};\n\t\n\t\tvar html = getHtml(property);\n\t\treturn toDataImage(html);\n\t};\n\t\n\texports.getHomeUrl = function (color, text) {\n\t\t//copyright: <a href=\"http://www.freepik.com\" title=\"Freepik\">Freepik</a>\n\t\tvar strokeWidth = 1;\n\t\tvar strokeColor = defaultProperty.strokeColor;\n\t\tvar fillColor = color;\n\t\n\t\tvar path = '\\\n\t\t\t<g fill=\"{{fillColor}}\" stroke=\"{{strokeColor}}\" stroke-width=\"{{strokeWidth}}\" >\\\n\t\t\t\t<path d=\"M33.609,20.96v12.384c0,1.104-0.896,2-2,2H7.805c-1.104,0-2-0.896-2-2V20.96c0-0.69,0.355-1.332,0.94-1.696l11.901-7.433\\\n\t\t\t\t\tc0.648-0.405,1.472-0.405,2.119,0l11.901,7.433C33.253,19.628,33.609,20.269,33.609,20.96z M38.475,15.432L20.768,4.374\\\n\t\t\t\t\tc-0.648-0.405-1.471-0.405-2.119,0L0.94,15.432c-0.937,0.585-1.221,1.819-0.637,2.756c0.584,0.938,1.816,1.224,2.756,0.638\\\n\t\t\t\t\tL19.707,8.428l16.646,10.396c0.33,0.206,0.695,0.304,1.059,0.304c0.667,0,1.318-0.333,1.697-0.941\\\n\t\t\t\t\tC39.695,17.249,39.41,16.017,38.475,15.432z\"/>\\\n\t\t\t</g>\\\n\t\t';\n\t\tpath = path.replace(/{{strokeWidth}}/g, strokeWidth).replace(/{{strokeColor}}/g, strokeColor).replace(/{{fillColor}}/g, fillColor);\n\t\n\t\tvar property = {\n\t\t\tviewBox: \"-2 -2 44 44\",\n\t\t\tpath: path,\n\t\t\ttext: {\n\t\t\t\toffset: {\n\t\t\t\t\tx: 20,\n\t\t\t\t\ty: 32\n\t\t\t\t},\n\t\t\t\tsize: 14,\n\t\t\t\tvalue: text,\n\t\t\t\tcolor: getContrastYIQ(color)\n\t\t\t}\n\t\t};\n\t\n\t\tvar html = getHtml(property);\n\t\treturn toDataImage(html);\n\t};\n\t\n\texports.getCloudUrl = function (color, text) {\n\t\t//copyright: <a href=\"http://www.freepik.com\" title=\"Freepik\">Freepik</a>\n\t\tvar strokeWidth = 10;\n\t\tvar strokeColor = defaultProperty.strokeColor;\n\t\tvar fillColor = color;\n\t\n\t\tvar path = '\\\n\t\t\t<g fill=\"{{fillColor}}\" stroke=\"{{strokeColor}}\" stroke-width=\"{{strokeWidth}}\">\\\n\t\t\t\t<path d=\"M62.513,153.087c-0.009-0.525-0.02-1.049-0.02-1.575c0-50.155,40.659-90.814,90.814-90.814\\\n\t\t\t\tc43.222,0,79.388,30.196,88.562,70.643c8.555-4.789,18.409-7.531,28.91-7.531c32.766,0,59.328,26.562,59.328,59.328\\\n\t\t\t\tc0,1.339-0.06,2.664-0.148,3.981c24.325,9.03,41.661,32.444,41.661,59.911c0,35.286-28.605,63.892-63.892,63.892H79.865\\\n\t\t\t\tC35.757,310.921,0,275.164,0,231.056C0,192.907,26.749,161.011,62.513,153.087z\"/>\\\n\t\t\t</g>\\\n\t\t';\n\t\tpath = path.replace(/{{strokeWidth}}/g, strokeWidth).replace(/{{strokeColor}}/g, strokeColor).replace(/{{fillColor}}/g, fillColor);\n\t\n\t\tvar property = {\n\t\t\tviewBox: \"-20 -20 420 420\",\n\t\t\tpath: path,\n\t\t\ttext: {\n\t\t\t\toffset: {\n\t\t\t\t\tx: 180,\n\t\t\t\t\ty: 280\n\t\t\t\t},\n\t\t\t\tsize: 140,\n\t\t\t\tvalue: text,\n\t\t\t\tcolor: getContrastYIQ(color)\n\t\t\t}\n\t\t};\n\t\n\t\tvar html = getHtml(property);\n\t\treturn toDataImage(html);\n\t};\n\t\n\texports.getFactoryUrl = function (color, text) {\n\t\t//copyright: <a href=\"http://www.freepik.com\" title=\"Freepik\">Freepik</a>\n\t\tvar strokeWidth = 13;\n\t\tvar strokeColor = defaultProperty.strokeColor;\n\t\tvar fillColor = color;\n\t\n\t\tvar path = '\\\n\t\t\t<path fill=\"{{fillColor}}\" stroke=\"{{strokeColor}}\" stroke-width=\"{{strokeWidth}}\" \\\n\t\t\td=\"M499.669,495.616C406.528,348.416,373.333,159.595,373.333,32c0-28.885-85.781-32-122.667-32C213.781,0,128,3.115,128,32\\\n\t\t\tc0,104.875-15.04,304.555-115.669,463.616c-2.091,3.285-2.219,7.445-0.341,10.859c1.877,3.413,5.461,5.525,9.344,5.525h469.333\\\n\t\t\tc3.883,0,7.467-2.112,9.344-5.525S501.76,498.923,499.669,495.616z M343.403,32.853c-0.747,0.235-1.429,0.469-2.24,0.683\\\n\t\t\tc-2.091,0.597-4.459,1.195-7.061,1.771c-0.491,0.107-0.875,0.213-1.365,0.32c-3.2,0.683-6.784,1.365-10.688,2.005\\\n\t\t\tc-1.003,0.171-2.176,0.32-3.221,0.469c-3.008,0.469-6.187,0.896-9.579,1.323c-1.6,0.192-3.285,0.363-4.971,0.555\\\n\t\t\tc-3.221,0.341-6.592,0.661-10.112,0.96c-1.941,0.149-3.883,0.32-5.909,0.448c-3.797,0.256-7.829,0.469-11.947,0.661\\\n\t\t\tc-1.963,0.085-3.84,0.192-5.867,0.256c-6.272,0.213-12.8,0.341-19.755,0.341c-6.955,0-13.483-0.128-19.755-0.341\\\n\t\t\tc-2.027-0.064-3.904-0.171-5.867-0.256c-4.117-0.192-8.149-0.384-11.947-0.661c-2.027-0.149-3.989-0.299-5.909-0.448\\\n\t\t\tc-3.52-0.299-6.891-0.597-10.112-0.96c-1.685-0.171-3.371-0.363-4.971-0.555c-3.392-0.405-6.571-0.853-9.579-1.323\\\n\t\t\tc-1.045-0.171-2.219-0.32-3.221-0.469c-3.904-0.64-7.488-1.323-10.688-2.005c-0.512-0.107-0.875-0.213-1.365-0.32\\\n\t\t\tc-2.603-0.576-4.992-1.173-7.061-1.771c-0.811-0.235-1.493-0.469-2.24-0.683c-0.981-0.299-1.813-0.597-2.645-0.896\\\n\t\t\tc13.803-4.864,46.037-10.624,95.381-10.624s81.536,5.76,95.339,10.624C345.216,32.256,344.384,32.555,343.403,32.853z\"/>\\\n\t\t';\n\t\tpath = path.replace(/{{strokeWidth}}/g, strokeWidth).replace(/{{strokeColor}}/g, strokeColor).replace(/{{fillColor}}/g, fillColor);\n\t\n\t\tvar property = {\n\t\t\tviewBox: \"-44 -44 600 600\",\n\t\t\tpath: path,\n\t\t\ttext: {\n\t\t\t\toffset: {\n\t\t\t\t\tx: 250,\n\t\t\t\t\ty: 480\n\t\t\t\t},\n\t\t\t\tsize: 200,\n\t\t\t\tvalue: text,\n\t\t\t\tcolor: getContrastYIQ(color)\n\t\t\t}\n\t\t};\n\t\n\t\tvar html = getHtml(property);\n\t\treturn toDataImage(html);\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 11:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 39:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(moment) {\"use strict\";\n\t\n\tvar SVGTool = __webpack_require__(10);\n\t\n\tmodule.exports = {\n\t\tformatter: {\n\t\t\tsn: function sn(value, row, index) {\n\t\t\t\treturn 1 + index;\n\t\t\t},\n\t\t\tlocation: function location(value, row, index) {\n\t\t\t\t// var url = \"https://www.google.com.tw/maps/place/\" + value.lat + ',' + value.lng;\n\t\t\t\tvar url = \"/@\" + value.lat + ',' + value.lng;\n\t\t\t\tvar latlng = [value.lat, value.lng].join(', ');\n\t\n\t\t\t\treturn [\"<a href=\\\"\" + url + \"\\\" class=\\\"latlng\\\" target=\\\"_blank\\\" data-latlng=\\\"\" + latlng + \"\\\">\", '<span class=\"glyphicon glyphicon-map-marker\"></span>', '</a>'].join('');\n\t\t\t},\n\t\t\tdetail: function detail(index, row, element) {\n\t\t\t\treturn [\"<div class='col-sm-6'>\", bsTable.generate.table(\"Data\", ['Index', 'Value'], row.Data), \"</div>\", \"<div class='col-sm-6'>\", bsTable.generate.table(\"RawData\", ['Index', 'Value'], row.RawData), \"</div>\"].join('');\n\t\t\t},\n\t\t\tupdateTime: function updateTime(time) {\n\t\t\t\tvar human = moment(time).fromNow();\n\t\t\t\tvar dataTime = moment(time).format('YYYY-MM-DD HH:mm');\n\t\t\t\treturn '<span title=\"' + dataTime + '\"><span class=\"glyphicon glyphicon-time\"></span> ' + human + '</span>';\n\t\t\t},\n\t\t\tsiteName: function siteName(name, row) {\n\t\t\t\tvar url = \"/site#\" + row.SiteGroup + '$' + row.uniqueKey;\n\t\t\t\treturn \"<a href='\" + url + \"' target='_blank'><span class='glyphicon glyphicon-bookmark'></span> \" + name + \"</a>\";\n\t\t\t},\n\t\t\tranking: function ranking(_ranking) {\n\t\t\t\tif (_ranking == null) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\n\t\t\t\tvar html = [];\n\t\t\t\tvar template = '<span class=\"glyphicon glyphicon-{{icon}}\"></span>';\n\t\t\t\tfor (var i = 1; i <= 5; i++) {\n\t\t\t\t\thtml.push(template.replace('{{icon}}', i <= _ranking ? 'star' : 'star-empty'));\n\t\t\t\t}\n\t\t\t\treturn html.join('');\n\t\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\tstatus: function status(_status) {\n\t\t\t\tif (!_status) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\n\t\t\t\tvar template = '<img src=\"{{url}}\" title=\"{{hint}}\" />';\n\t\t\t\tvar hints = {\n\t\t\t\t\t'indoor': '可能放置於室內或設備故障',\n\t\t\t\t\t'longterm': '可能接近長時間的固定污染源或設備故障',\n\t\t\t\t\t'shortterm': '偵測到小型污染源'\n\t\t\t\t};\n\t\t\t\tvar color = '#333';\n\t\t\t\tvar text = '';\n\t\t\t\tvar html = [];\n\t\n\t\t\t\tif (_status.indexOf('indoor') > -1) {\n\t\t\t\t\thtml.push(template.replace('{{url}}', SVGTool.getHomeUrl(color, text)).replace('{{hint}}', hints['indoor']));\n\t\t\t\t}\n\t\t\t\tif (_status.indexOf('longterm-pollution') > -1) {\n\t\t\t\t\thtml.push(template.replace('{{url}}', SVGTool.getFactoryUrl(color, text)).replace('{{hint}}', hints['longterm']));\n\t\t\t\t}\n\t\t\t\tif (_status.indexOf('shortterm-pollution') > -1) {\n\t\t\t\t\thtml.push(template.replace('{{url}}', SVGTool.getCloudUrl(color, text)).replace('{{hint}}', hints['shortterm']));\n\t\t\t\t}\n\t\n\t\t\t\treturn html.join('');\n\t\t\t},\n\t\t\twidget: function widget(name, row) {\n\t\t\t\tvar url = \"/widget/create/\" + row.SiteGroup + '$' + row.uniqueKey;\n\t\t\t\treturn \"<a href='\" + url + \"' target='_blank'><span class='glyphicon glyphicon-dashboard'></span></a>\";\n\t\t\t}\n\t\t},\n\t\tgenerate: {\n\t\t\ttable: function table(title, head, body) {\n\t\t\t\tvar headHtml = '<tr><th>' + head.join('</th><th>') + '</th></tr>';\n\t\n\t\t\t\tvar bodyHtml = '';\n\t\t\t\tfor (var index in body) {\n\t\t\t\t\tvar value = body[index];\n\t\t\t\t\t// console.log(index, value);\n\t\t\t\t\tbodyHtml += ['<tr>', '<th>' + index + '</th>', '<td>' + value + '</td>', \"</tr>\"].join('');\n\t\t\t\t}\n\t\n\t\t\t\treturn ['<div class=\"panel panel-info\">', '<div class=\"panel-heading\">', title, '</div>', \"<table class='table table-striped'>\", \"<thead>\", headHtml, \"</thead>\", \"<tbody>\", bodyHtml, \"</tbody>\", \"</table>\", '</div>'].join('');\n\t\t\t}\n\t\t}\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 51:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// list.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9b46708583e1cd732650","// require(\"expose?bsTable!./list-table\");\nwindow.bsTable = require(\"./list-table\");\nrequire(\"css/common.css\");\nrequire(\"css/list.css\");\n\n\nmoment.locale('zh-tw');\nmoment.updateLocale('zh-tw', {\n\trelativeTime: {\n\t\tm : '1分鐘',\n\t\th : '1小時',\n\t\td : '1天',\n\t\tM : '1個月',\n\t\ty : '1年',\n\t}\n});\n\n\n\n$(function(){\n\t// siteName hashtag\n\tvar siteName = window.location.hash.substr(1);\t\n\t$(\".bsTable\").on('load-success.bs.table', function(e, data){\n\t\tif(siteName){\n\t\t\t$(\".bootstrap-table .search input\").val(siteName).trigger('keyup');\n\t\t}\n\t});\n\n\t$(\".bsTable\").on('click-row.bs.table', function(e, row, $tr){\n\t\tif ($tr.next().is('tr.detail-view')) {\n\t\t\t$(this).bootstrapTable('collapseRow', $tr.data('index'));\n\t\t} else {\n\t\t\t$(this).bootstrapTable('expandRow', $tr.data('index'));\n\t\t}\n\t});\n\n\t$(\"#filter button\").click(function(){\n\t\tif($(this).data('type')){\n\t\t\t$(\"#filter button[data-type]\").removeClass('btn-primary')\n\t\t\t\t.filter(this).addClass('btn-primary');\n\t\t}\n\n\t\tif($(this).data('group')){\n\t\t\t$(\"#filter button[data-group]\").removeClass('btn-success')\n\t\t\t\t.filter(this).addClass('btn-success');\n\t\t}\n\n\t\tvar group = $(\"#filter button.btn-success[data-group]\").data('group');\n\t\tloadDatasource(group);\n\t});\n\n\tfunction loadDatasource(filename){\n\t\tif(!filename){ return false; }\n\n\t\t$(\"#loading\").show();\n\n\t\tvar url = \"/json/{{filename}}.json\";\n\t\turl = url.replace('{{filename}}', filename);\n\n\t\t$.getJSON(url).then(data => {\n\t\t\t$('#bsTable').bootstrapTable('load', data);\n\t\t\t$(\"#loading\").hide();\n\t\t});\n\t}\n\n\tgoogle.maps.event.addDomListener(window, \"load\", function(){\n\t\tvar geocoder = new google.maps.Geocoder();\n\t\tvar getAddr = function(lat, lng, cb){\n\t\t\tvar coord = new google.maps.LatLng(lat, lng);\n\t\t\tgeocoder.geocode({'latLng': coord }, function(results, status) {\n\t\t\t\tif (status === google.maps.GeocoderStatus.OK && results) {\t\n\t\t\t\t\tvar address = results[0].formatted_address;\n\n\t\t\t\t\tvar components = results[0].address_components;\n\t\t\t\t\tif( components.length > 4 ){\t\t\t\t\t\t\n\t\t\t\t\t\tcomponents.shift(); components.pop();\n\t\t\t\t\t\tvar seperate = components[components.length-1].short_name == \"TW\" ? '' : ', ';\n\t\t\t\t\t\taddress = components.reverse().map((component) => component.long_name).join(seperate);\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t\tcb(address);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcb('');\n\t\t\t});\n\t\t}\n\n\t\t$(\"body\").on(\"mouseover\", \"a.latlng\", function(){\n\t\t\tvar $el = $(this);\n\t\t\tvar [lat, lng] = $(this).data('latlng').split(',');\n\t\t\tgetAddr(lat, lng, function(addr){\n\t\t\t\t$el.attr('title', addr + ` (${$el.data('latlng')})` );\n\t\t\t});\t\t\t\n\t\t});\n\t});\n});\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/list-page.js","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 1\n// module chunks = 0 1 2 3 4 5","//! moment.js\n//! version : 2.18.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var string, match, dayFormat,\n        dateFormat, timeFormat, tzFormat;\n    var timezones = {\n        ' GMT': ' +0000',\n        ' EDT': ' -0400',\n        ' EST': ' -0500',\n        ' CDT': ' -0500',\n        ' CST': ' -0600',\n        ' MDT': ' -0600',\n        ' MST': ' -0700',\n        ' PDT': ' -0700',\n        ' PST': ' -0800'\n    };\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n    var timezone, timezoneIndex;\n\n    string = config._i\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string);\n\n    if (match) {\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        if (match[1]) { // day of week given\n            var momentDate = new Date(match[2]);\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\n            if (match[1].substr(0,3) !== momentDay) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return;\n            }\n        }\n\n        switch (match[5].length) {\n            case 2: // military\n                if (timezoneIndex === 0) {\n                    timezone = ' +0000';\n                } else {\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n                }\n                break;\n            case 4: // Zone\n                timezone = timezones[match[5]];\n                break;\n            default: // UT or +/-9999\n                timezone = timezones[' GMT'];\n        }\n        match[5] = timezone;\n        config._i = match.splice(1).join('');\n        tzFormat = ' ZZ';\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n        configFromStringAndFormat(config);\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n    if (!this.isValid()) {\n        return null;\n    }\n    var m = this.clone().utc();\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        return this.toDate().toISOString();\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.18.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/moment.js\n// module id = 2\n// module chunks = 0 1 2 3 5","//! moment.js locale configuration\n//! locale : Chinese (Taiwan) [zh-tw]\n//! author : Ben : https://github.com/ben-lin\n//! author : Chris Lam : https://github.com/hehachris\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar zhTw = moment.defineLocale('zh-tw', {\n    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'YYYY年MMMD日',\n        LL : 'YYYY年MMMD日',\n        LLL : 'YYYY年MMMD日 HH:mm',\n        LLLL : 'YYYY年MMMD日dddd HH:mm',\n        l : 'YYYY年MMMD日',\n        ll : 'YYYY年MMMD日',\n        lll : 'YYYY年MMMD日 HH:mm',\n        llll : 'YYYY年MMMD日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n            return hour;\n        } else if (meridiem === '中午') {\n            return hour >= 11 ? hour : hour + 12;\n        } else if (meridiem === '下午' || meridiem === '晚上') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        var hm = hour * 100 + minute;\n        if (hm < 600) {\n            return '凌晨';\n        } else if (hm < 900) {\n            return '早上';\n        } else if (hm < 1130) {\n            return '上午';\n        } else if (hm < 1230) {\n            return '中午';\n        } else if (hm < 1800) {\n            return '下午';\n        } else {\n            return '晚上';\n        }\n    },\n    calendar : {\n        sameDay : '[今天]LT',\n        nextDay : '[明天]LT',\n        nextWeek : '[下]ddddLT',\n        lastDay : '[昨天]LT',\n        lastWeek : '[上]ddddLT',\n        sameElse : 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n    ordinal : function (number, period) {\n        switch (period) {\n            case 'd' :\n            case 'D' :\n            case 'DDD' :\n                return number + '日';\n            case 'M' :\n                return number + '月';\n            case 'w' :\n            case 'W' :\n                return number + '週';\n            default :\n                return number;\n        }\n    },\n    relativeTime : {\n        future : '%s內',\n        past : '%s前',\n        s : '幾秒',\n        m : '1 分鐘',\n        mm : '%d 分鐘',\n        h : '1 小時',\n        hh : '%d 小時',\n        d : '1 天',\n        dd : '%d 天',\n        M : '1 個月',\n        MM : '%d 個月',\n        y : '1 年',\n        yy : '%d 年'\n    }\n});\n\nreturn zhTw;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/zh-tw.js\n// module id = 3\n// module chunks = 0 1 2 3 5","var map = {\n\t\"./zh-tw\": 3,\n\t\"./zh-tw.js\": 3\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale zh-tw\n// module id = 7\n// module chunks = 0 1 2 3 5","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 8\n// module chunks = 0 1 2 3 5","var svgTemplate = '\\\n\t<svg width=\"{{width}}\" height=\"{{height}}\" viewBox=\"{{viewBox}}\" xmlns=\"http://www.w3.org/2000/svg\">\\\n\t\t{{path}}\\\n\t\t<text x=\"{{textOffsetX}}\" y=\"{{textOffsetY}}\"\\\n\t\t\tfill=\"{{textColor}}\" text-anchor=\"middle\" \\\n\t\t\tstyle=\"font-size:{{textSize}}px; font-weight: 800; \">\\\n\t\t\t{{text}}\\\n\t\t</text>\\\n\t</svg>';\n\nvar defaultProperty = {\n\twidth: 35,\n\theight: 35,\n\tviewBox: '0 0 40 40',\n\tpath: '',\n\ttext: {\n\t\toffset: {\n\t\t\tx: 15,\n\t\t\ty: 15,\n\t\t},\n\t\tcolor: \"#FFFFFF\",\n\t\tsize: 35,\n\t\tvalue: '',\n\t},\n\tstrokeColor: \"#4F595D\",\n}\n\nvar getHtml = function(userProperty){\n\tvar property = $.extend(true, {}, defaultProperty, userProperty);\n\n\tvar svgHtml = svgTemplate.replace(/{{width}}/g, property.width)\n\t\t\t\t\t\t .replace(/{{height}}/g, property.height)\n\t\t\t\t\t\t .replace(/{{viewBox}}/g, property.viewBox)\n\t\t\t\t\t\t .replace(/{{path}}/g, property.path)\n\t\t\t\t\t\t .replace(/{{textOffsetX}}/g, property.text.offset.x)\n\t\t\t\t\t\t .replace(/{{textOffsetY}}/g, property.text.offset.y)\n\t\t\t\t\t\t .replace(/{{textColor}}/g, property.text.color)\n\t\t\t\t\t\t .replace(/{{textSize}}/g, property.text.size)\n\t\t\t\t\t\t .replace(/{{text}}/g, property.text.value);\n\n\treturn svgHtml;\n}\n\nvar toDataImage = function(svgHtml){\n\treturn 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svgHtml);\n}\n\nvar getContrastYIQ = function(hexcolor){\n\t//source: https://24ways.org/2010/calculating-color-contrast/\n\thexcolor = hexcolor.replace('#', '');\n\tvar r = parseInt(hexcolor.substr(0,2),16);\n\tvar g = parseInt(hexcolor.substr(2,2),16);\n\tvar b = parseInt(hexcolor.substr(4,2),16);\n\tvar yiq = ((r*299)+(g*587)+(b*114))/1000;\n\treturn (yiq >= 128) ? '#000000' : '#FFFFFF';\n}\n\nexports.getCircleUrl = function(color, text, size=40){\n\tvar strokeWidth = 2;\n\tvar strokeColor = defaultProperty.strokeColor;\n\tvar fillColor = color;\n\n\tvar path = '\\\n\t\t<circle r=\"{{size}}\" stroke=\"{{strokeColor}}\" stroke-width=\"{{strokeWidth}}\" fill=\"{{fillColor}}\" />\\\n\t';\n\tpath = path.replace(/{{size}}/g, size)\n\t\t\t\t.replace(/{{strokeWidth}}/g, strokeWidth)\n\t\t\t\t.replace(/{{strokeColor}}/g, strokeColor)\n\t\t\t\t.replace(/{{fillColor}}/g, fillColor);\n\n\tvar property = {\n\t\tviewBox: \"-55 -55 110 110\",\n\t\tpath: path,\n\t\ttext: {\n\t\t\toffset: { x: 0, y: 13 },\n\t\t\tvalue: text,\n\t\t\tcolor: getContrastYIQ(color),\n\t\t}\n\t};\n\n\tvar html = getHtml(property);\n\treturn toDataImage(html);\n}\n\nexports.getHomeUrl = function(color, text){\n\t//copyright: <a href=\"http://www.freepik.com\" title=\"Freepik\">Freepik</a>\n\tvar strokeWidth = 1;\n\tvar strokeColor = defaultProperty.strokeColor;\n\tvar fillColor = color;\n\n\tvar path = '\\\n\t\t<g fill=\"{{fillColor}}\" stroke=\"{{strokeColor}}\" stroke-width=\"{{strokeWidth}}\" >\\\n\t\t\t<path d=\"M33.609,20.96v12.384c0,1.104-0.896,2-2,2H7.805c-1.104,0-2-0.896-2-2V20.96c0-0.69,0.355-1.332,0.94-1.696l11.901-7.433\\\n\t\t\t\tc0.648-0.405,1.472-0.405,2.119,0l11.901,7.433C33.253,19.628,33.609,20.269,33.609,20.96z M38.475,15.432L20.768,4.374\\\n\t\t\t\tc-0.648-0.405-1.471-0.405-2.119,0L0.94,15.432c-0.937,0.585-1.221,1.819-0.637,2.756c0.584,0.938,1.816,1.224,2.756,0.638\\\n\t\t\t\tL19.707,8.428l16.646,10.396c0.33,0.206,0.695,0.304,1.059,0.304c0.667,0,1.318-0.333,1.697-0.941\\\n\t\t\t\tC39.695,17.249,39.41,16.017,38.475,15.432z\"/>\\\n\t\t</g>\\\n\t';\n\tpath = path.replace(/{{strokeWidth}}/g, strokeWidth)\n\t\t\t\t.replace(/{{strokeColor}}/g, strokeColor)\n\t\t\t\t.replace(/{{fillColor}}/g, fillColor);\n\n\tvar property = {\n\t\tviewBox: \"-2 -2 44 44\",\n\t\tpath: path,\n\t\ttext: {\n\t\t\toffset: {\n\t\t\t\tx: 20,\n\t\t\t\ty: 32,\n\t\t\t},\n\t\t\tsize: 14,\n\t\t\tvalue: text,\n\t\t\tcolor: getContrastYIQ(color),\n\t\t}\n\t};\n\n\tvar html = getHtml(property);\n\treturn toDataImage(html);\n}\n\nexports.getCloudUrl = function(color, text){\n\t//copyright: <a href=\"http://www.freepik.com\" title=\"Freepik\">Freepik</a>\n\tvar strokeWidth = 10;\n\tvar strokeColor = defaultProperty.strokeColor;\n\tvar fillColor = color;\n\n\tvar path = '\\\n\t\t<g fill=\"{{fillColor}}\" stroke=\"{{strokeColor}}\" stroke-width=\"{{strokeWidth}}\">\\\n\t\t\t<path d=\"M62.513,153.087c-0.009-0.525-0.02-1.049-0.02-1.575c0-50.155,40.659-90.814,90.814-90.814\\\n\t\t\tc43.222,0,79.388,30.196,88.562,70.643c8.555-4.789,18.409-7.531,28.91-7.531c32.766,0,59.328,26.562,59.328,59.328\\\n\t\t\tc0,1.339-0.06,2.664-0.148,3.981c24.325,9.03,41.661,32.444,41.661,59.911c0,35.286-28.605,63.892-63.892,63.892H79.865\\\n\t\t\tC35.757,310.921,0,275.164,0,231.056C0,192.907,26.749,161.011,62.513,153.087z\"/>\\\n\t\t</g>\\\n\t';\n\tpath = path.replace(/{{strokeWidth}}/g, strokeWidth)\n\t\t\t\t.replace(/{{strokeColor}}/g, strokeColor)\n\t\t\t\t.replace(/{{fillColor}}/g, fillColor);\n\n\tvar property = {\n\t\tviewBox: \"-20 -20 420 420\",\n\t\tpath: path,\n\t\ttext: {\n\t\t\toffset: {\n\t\t\t\tx: 180,\n\t\t\t\ty: 280,\n\t\t\t},\n\t\t\tsize: 140,\n\t\t\tvalue: text,\n\t\t\tcolor: getContrastYIQ(color),\n\t\t}\n\t};\n\n\tvar html = getHtml(property);\n\treturn toDataImage(html);\n}\n\nexports.getFactoryUrl = function(color, text){\n\t//copyright: <a href=\"http://www.freepik.com\" title=\"Freepik\">Freepik</a>\n\tvar strokeWidth = 13;\n\tvar strokeColor = defaultProperty.strokeColor;\n\tvar fillColor = color;\n\n\tvar path = '\\\n\t\t<path fill=\"{{fillColor}}\" stroke=\"{{strokeColor}}\" stroke-width=\"{{strokeWidth}}\" \\\n\t\td=\"M499.669,495.616C406.528,348.416,373.333,159.595,373.333,32c0-28.885-85.781-32-122.667-32C213.781,0,128,3.115,128,32\\\n\t\tc0,104.875-15.04,304.555-115.669,463.616c-2.091,3.285-2.219,7.445-0.341,10.859c1.877,3.413,5.461,5.525,9.344,5.525h469.333\\\n\t\tc3.883,0,7.467-2.112,9.344-5.525S501.76,498.923,499.669,495.616z M343.403,32.853c-0.747,0.235-1.429,0.469-2.24,0.683\\\n\t\tc-2.091,0.597-4.459,1.195-7.061,1.771c-0.491,0.107-0.875,0.213-1.365,0.32c-3.2,0.683-6.784,1.365-10.688,2.005\\\n\t\tc-1.003,0.171-2.176,0.32-3.221,0.469c-3.008,0.469-6.187,0.896-9.579,1.323c-1.6,0.192-3.285,0.363-4.971,0.555\\\n\t\tc-3.221,0.341-6.592,0.661-10.112,0.96c-1.941,0.149-3.883,0.32-5.909,0.448c-3.797,0.256-7.829,0.469-11.947,0.661\\\n\t\tc-1.963,0.085-3.84,0.192-5.867,0.256c-6.272,0.213-12.8,0.341-19.755,0.341c-6.955,0-13.483-0.128-19.755-0.341\\\n\t\tc-2.027-0.064-3.904-0.171-5.867-0.256c-4.117-0.192-8.149-0.384-11.947-0.661c-2.027-0.149-3.989-0.299-5.909-0.448\\\n\t\tc-3.52-0.299-6.891-0.597-10.112-0.96c-1.685-0.171-3.371-0.363-4.971-0.555c-3.392-0.405-6.571-0.853-9.579-1.323\\\n\t\tc-1.045-0.171-2.219-0.32-3.221-0.469c-3.904-0.64-7.488-1.323-10.688-2.005c-0.512-0.107-0.875-0.213-1.365-0.32\\\n\t\tc-2.603-0.576-4.992-1.173-7.061-1.771c-0.811-0.235-1.493-0.469-2.24-0.683c-0.981-0.299-1.813-0.597-2.645-0.896\\\n\t\tc13.803-4.864,46.037-10.624,95.381-10.624s81.536,5.76,95.339,10.624C345.216,32.256,344.384,32.555,343.403,32.853z\"/>\\\n\t';\n\tpath = path.replace(/{{strokeWidth}}/g, strokeWidth)\n\t\t\t\t.replace(/{{strokeColor}}/g, strokeColor)\n\t\t\t\t.replace(/{{fillColor}}/g, fillColor);\n\n\tvar property = {\n\t\tviewBox: \"-44 -44 600 600\",\n\t\tpath: path,\n\t\ttext: {\n\t\t\toffset: {\n\t\t\t\tx: 250,\n\t\t\t\ty: 480,\n\t\t\t},\n\t\t\tsize: 200,\n\t\t\tvalue: text,\n\t\t\tcolor: getContrastYIQ(color),\n\t\t}\n\t};\n\n\tvar html = getHtml(property);\n\treturn toDataImage(html);\n}\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/svg-tool.js","var SVGTool = require(\"js/svg-tool\");\n\nmodule.exports = {\n\tformatter: {\n\t\tsn: function(value, row, index){\n\t\t\treturn 1+index;\n\t\t},\n\t\tlocation: function(value, row, index){\n\t\t\t// var url = \"https://www.google.com.tw/maps/place/\" + value.lat + ',' + value.lng;\n\t\t\tvar url = \"/@\" + value.lat + ',' + value.lng;\n\t\t\tvar latlng = [value.lat, value.lng].join(', ');\t\t\t\n\n\t\t\treturn [\n\t\t\t\t`<a href=\"${url}\" class=\"latlng\" target=\"_blank\" data-latlng=\"${latlng}\">`,\n\t\t\t\t'<span class=\"glyphicon glyphicon-map-marker\"></span>',\n\t\t\t\t'</a>'\n\t\t\t].join('');\n\t\t},\n\t\tdetail: function(index, row, element){\n\t\t\treturn [\n\t\t\t\t\"<div class='col-sm-6'>\",\n\t\t\t\tbsTable.generate.table(\"Data\", ['Index', 'Value'], row.Data),\n\t\t\t\t\"</div>\",\n\t\t\t\t\"<div class='col-sm-6'>\",\n\t\t\t\tbsTable.generate.table(\"RawData\", ['Index', 'Value'], row.RawData),\n\t\t\t\t\"</div>\",\n\t\t\t].join('');\n\t\t},\n\t\tupdateTime: function(time){\n\t\t\tvar human = moment(time).fromNow();\n\t\t\tvar dataTime = moment(time).format('YYYY-MM-DD HH:mm');\n\t\t\treturn '<span title=\"' + dataTime + '\"><span class=\"glyphicon glyphicon-time\"></span> ' + human + '</span>';\n\t\t},\n\t\tsiteName: function(name, row){\n\t\t\tvar url = \"/site#\" + row.SiteGroup + '$' + row.uniqueKey;\n\t\t\treturn \"<a href='\" + url + \"' target='_blank'><span class='glyphicon glyphicon-bookmark'></span> \" + name + \"</a>\";\n\t\t},\n\t\tranking: function(ranking){\n\t\t\tif(ranking == null){ return ''; }\n\n\t\t\tvar html = [];\n\t\t\tvar template = '<span class=\"glyphicon glyphicon-{{icon}}\"></span>';\n\t\t\tfor(var i=1; i<=5; i++){\n\t\t\t\thtml.push(template.replace('{{icon}}', i<=ranking ? 'star' : 'star-empty'));\n\t\t\t}\n\t\t\treturn html.join('');\n\n\t\t\treturn value;\n\t\t},\n\t\tstatus: function(status){\n\t\t\tif(!status){ return ''; }\n\n\t\t\tvar template = '<img src=\"{{url}}\" title=\"{{hint}}\" />';\n\t\t\tvar hints = {\n\t\t\t\t'indoor': '可能放置於室內或設備故障',\n\t\t\t\t'longterm': '可能接近長時間的固定污染源或設備故障',\n\t\t\t\t'shortterm': '偵測到小型污染源',\n\t\t\t};\n\t\t\tvar color = '#333';\n\t\t\tvar text = '';\n\t\t\tvar html = [];\n\n\t\t\tif(status.indexOf('indoor') > -1){ \n\t\t\t\thtml.push(template.replace('{{url}}', SVGTool.getHomeUrl(color, text)).replace('{{hint}}', hints['indoor'])); \n\t\t\t}\n\t\t\tif(status.indexOf('longterm-pollution') > -1){ \n\t\t\t\thtml.push(template.replace('{{url}}', SVGTool.getFactoryUrl(color, text)).replace('{{hint}}', hints['longterm'])); \n\t\t\t}\n\t\t\tif(status.indexOf('shortterm-pollution') > -1){ \n\t\t\t\thtml.push(template.replace('{{url}}', SVGTool.getCloudUrl(color, text)).replace('{{hint}}', hints['shortterm'])); \n\t\t\t}\n\t\t\t\n\t\t\treturn html.join('');\n\t\t},\n\t\twidget: function(name, row){\n\t\t\tvar url = \"/widget/create/\" + row.SiteGroup + '$' + row.uniqueKey;\n\t\t\treturn \"<a href='\" + url + \"' target='_blank'><span class='glyphicon glyphicon-dashboard'></span></a>\";\n\t\t},\n\t},\n\tgenerate: {\n\t\ttable: function(title, head, body){\n\t\t\tvar headHtml = '<tr><th>' + head.join('</th><th>') + '</th></tr>';\n\t\t\t\n\t\t\tvar bodyHtml = '';\n\t\t\tfor(var index in body){\n\t\t\t\tvar value = body[index];\n\t\t\t\t// console.log(index, value);\n\t\t\t\tbodyHtml += [\n\t\t\t\t\t'<tr>',\n\t\t\t\t\t\t'<th>' + index + '</th>',\n\t\t\t\t\t\t'<td>' + value + '</td>',\n\t\t\t\t\t\"</tr>\"\n\t\t\t\t].join('');\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\t'<div class=\"panel panel-info\">',\n\t\t\t\t\t'<div class=\"panel-heading\">',\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t'</div>',\n\t\t\t\t\t\"<table class='table table-striped'>\",\n\t\t\t\t\t\t\"<thead>\",\n\t\t\t\t\t\t\theadHtml,\n\t\t\t\t\t\t\"</thead>\",\n\t\t\t\t\t\t\"<tbody>\",\n\t\t\t\t\t\t\tbodyHtml,\n\t\t\t\t\t\t\"</tbody>\",\n\t\t\t\t\t\"</table>\",\n\t\t\t\t'</div>',\n\t\t\t].join('');\n\t\t}\n\t},\n}\n\n\n// WEBPACK FOOTER //\n// ./resources/assets/js/list-table.js"],"sourceRoot":""}